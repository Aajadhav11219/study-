{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "794bb152-b9e5-49c2-93b9-36518a5ecfef",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "10c26cc1-7d91-4f9f-990c-4bcd794a7a15",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"https://raw.githubusercontent.com/SR1608/Datasets/main/covid-data.csv\", sep =\",\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "231b7406-a333-4b3b-8853-58709fa089a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>new_cases</th>\n",
       "      <th>new_cases_smoothed</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>new_deaths</th>\n",
       "      <th>new_deaths_smoothed</th>\n",
       "      <th>...</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>extreme_poverty</th>\n",
       "      <th>cardiovasc_death_rate</th>\n",
       "      <th>diabetes_prevalence</th>\n",
       "      <th>female_smokers</th>\n",
       "      <th>male_smokers</th>\n",
       "      <th>handwashing_facilities</th>\n",
       "      <th>hospital_beds_per_thousand</th>\n",
       "      <th>life_expectancy</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>31/12/19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.5</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>01/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.5</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>02/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.5</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>03/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.5</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>04/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.5</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57389</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>13/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57390</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>14/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57391</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>15/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57392</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>16/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57393</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>17/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>57394 rows × 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      iso_code continent       location      date  total_cases  new_cases  \\\n",
       "0          AFG      Asia    Afghanistan  31/12/19          NaN        0.0   \n",
       "1          AFG      Asia    Afghanistan  01/01/20          NaN        0.0   \n",
       "2          AFG      Asia    Afghanistan  02/01/20          NaN        0.0   \n",
       "3          AFG      Asia    Afghanistan  03/01/20          NaN        0.0   \n",
       "4          AFG      Asia    Afghanistan  04/01/20          NaN        0.0   \n",
       "...        ...       ...            ...       ...          ...        ...   \n",
       "57389      NaN       NaN  International  13/11/20        696.0        NaN   \n",
       "57390      NaN       NaN  International  14/11/20        696.0        NaN   \n",
       "57391      NaN       NaN  International  15/11/20        696.0        NaN   \n",
       "57392      NaN       NaN  International  16/11/20        696.0        NaN   \n",
       "57393      NaN       NaN  International  17/11/20        696.0        NaN   \n",
       "\n",
       "       new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  ...  \\\n",
       "0                     NaN           NaN         0.0                  NaN  ...   \n",
       "1                     NaN           NaN         0.0                  NaN  ...   \n",
       "2                     NaN           NaN         0.0                  NaN  ...   \n",
       "3                     NaN           NaN         0.0                  NaN  ...   \n",
       "4                     NaN           NaN         0.0                  NaN  ...   \n",
       "...                   ...           ...         ...                  ...  ...   \n",
       "57389                 NaN           7.0         NaN                  NaN  ...   \n",
       "57390                 NaN           7.0         NaN                  NaN  ...   \n",
       "57391                 NaN           7.0         NaN                  NaN  ...   \n",
       "57392                 NaN           7.0         NaN                  NaN  ...   \n",
       "57393                 NaN           7.0         NaN                  NaN  ...   \n",
       "\n",
       "       gdp_per_capita  extreme_poverty  cardiovasc_death_rate  \\\n",
       "0            1803.987              NaN                597.029   \n",
       "1            1803.987              NaN                597.029   \n",
       "2            1803.987              NaN                597.029   \n",
       "3            1803.987              NaN                597.029   \n",
       "4            1803.987              NaN                597.029   \n",
       "...               ...              ...                    ...   \n",
       "57389             NaN              NaN                    NaN   \n",
       "57390             NaN              NaN                    NaN   \n",
       "57391             NaN              NaN                    NaN   \n",
       "57392             NaN              NaN                    NaN   \n",
       "57393             NaN              NaN                    NaN   \n",
       "\n",
       "       diabetes_prevalence  female_smokers  male_smokers  \\\n",
       "0                     9.59             NaN           NaN   \n",
       "1                     9.59             NaN           NaN   \n",
       "2                     9.59             NaN           NaN   \n",
       "3                     9.59             NaN           NaN   \n",
       "4                     9.59             NaN           NaN   \n",
       "...                    ...             ...           ...   \n",
       "57389                  NaN             NaN           NaN   \n",
       "57390                  NaN             NaN           NaN   \n",
       "57391                  NaN             NaN           NaN   \n",
       "57392                  NaN             NaN           NaN   \n",
       "57393                  NaN             NaN           NaN   \n",
       "\n",
       "       handwashing_facilities  hospital_beds_per_thousand  life_expectancy  \\\n",
       "0                      37.746                         0.5            64.83   \n",
       "1                      37.746                         0.5            64.83   \n",
       "2                      37.746                         0.5            64.83   \n",
       "3                      37.746                         0.5            64.83   \n",
       "4                      37.746                         0.5            64.83   \n",
       "...                       ...                         ...              ...   \n",
       "57389                     NaN                         NaN              NaN   \n",
       "57390                     NaN                         NaN              NaN   \n",
       "57391                     NaN                         NaN              NaN   \n",
       "57392                     NaN                         NaN              NaN   \n",
       "57393                     NaN                         NaN              NaN   \n",
       "\n",
       "       human_development_index  \n",
       "0                        0.498  \n",
       "1                        0.498  \n",
       "2                        0.498  \n",
       "3                        0.498  \n",
       "4                        0.498  \n",
       "...                        ...  \n",
       "57389                      NaN  \n",
       "57390                      NaN  \n",
       "57391                      NaN  \n",
       "57392                      NaN  \n",
       "57393                      NaN  \n",
       "\n",
       "[57394 rows x 49 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e56f9496-8606-4d0b-aa37-21762edea929",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>new_cases</th>\n",
       "      <th>new_cases_smoothed</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>new_deaths</th>\n",
       "      <th>new_deaths_smoothed</th>\n",
       "      <th>...</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>extreme_poverty</th>\n",
       "      <th>cardiovasc_death_rate</th>\n",
       "      <th>diabetes_prevalence</th>\n",
       "      <th>female_smokers</th>\n",
       "      <th>male_smokers</th>\n",
       "      <th>handwashing_facilities</th>\n",
       "      <th>hospital_beds_per_thousand</th>\n",
       "      <th>life_expectancy</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>31/12/19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.5</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>01/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.5</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>02/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.5</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>03/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.5</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>04/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.5</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  iso_code continent     location      date  total_cases  new_cases  \\\n",
       "0      AFG      Asia  Afghanistan  31/12/19          NaN        0.0   \n",
       "1      AFG      Asia  Afghanistan  01/01/20          NaN        0.0   \n",
       "2      AFG      Asia  Afghanistan  02/01/20          NaN        0.0   \n",
       "3      AFG      Asia  Afghanistan  03/01/20          NaN        0.0   \n",
       "4      AFG      Asia  Afghanistan  04/01/20          NaN        0.0   \n",
       "\n",
       "   new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  ...  \\\n",
       "0                 NaN           NaN         0.0                  NaN  ...   \n",
       "1                 NaN           NaN         0.0                  NaN  ...   \n",
       "2                 NaN           NaN         0.0                  NaN  ...   \n",
       "3                 NaN           NaN         0.0                  NaN  ...   \n",
       "4                 NaN           NaN         0.0                  NaN  ...   \n",
       "\n",
       "   gdp_per_capita  extreme_poverty  cardiovasc_death_rate  \\\n",
       "0        1803.987              NaN                597.029   \n",
       "1        1803.987              NaN                597.029   \n",
       "2        1803.987              NaN                597.029   \n",
       "3        1803.987              NaN                597.029   \n",
       "4        1803.987              NaN                597.029   \n",
       "\n",
       "   diabetes_prevalence  female_smokers  male_smokers  handwashing_facilities  \\\n",
       "0                 9.59             NaN           NaN                  37.746   \n",
       "1                 9.59             NaN           NaN                  37.746   \n",
       "2                 9.59             NaN           NaN                  37.746   \n",
       "3                 9.59             NaN           NaN                  37.746   \n",
       "4                 9.59             NaN           NaN                  37.746   \n",
       "\n",
       "   hospital_beds_per_thousand  life_expectancy  human_development_index  \n",
       "0                         0.5            64.83                    0.498  \n",
       "1                         0.5            64.83                    0.498  \n",
       "2                         0.5            64.83                    0.498  \n",
       "3                         0.5            64.83                    0.498  \n",
       "4                         0.5            64.83                    0.498  \n",
       "\n",
       "[5 rows x 49 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "04b59498-0413-4154-892b-543ce125e3c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>new_cases</th>\n",
       "      <th>new_cases_smoothed</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>new_deaths</th>\n",
       "      <th>new_deaths_smoothed</th>\n",
       "      <th>...</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>extreme_poverty</th>\n",
       "      <th>cardiovasc_death_rate</th>\n",
       "      <th>diabetes_prevalence</th>\n",
       "      <th>female_smokers</th>\n",
       "      <th>male_smokers</th>\n",
       "      <th>handwashing_facilities</th>\n",
       "      <th>hospital_beds_per_thousand</th>\n",
       "      <th>life_expectancy</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>57389</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>13/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57390</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>14/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57391</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>15/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57392</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>16/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57393</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>17/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      iso_code continent       location      date  total_cases  new_cases  \\\n",
       "57389      NaN       NaN  International  13/11/20        696.0        NaN   \n",
       "57390      NaN       NaN  International  14/11/20        696.0        NaN   \n",
       "57391      NaN       NaN  International  15/11/20        696.0        NaN   \n",
       "57392      NaN       NaN  International  16/11/20        696.0        NaN   \n",
       "57393      NaN       NaN  International  17/11/20        696.0        NaN   \n",
       "\n",
       "       new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  ...  \\\n",
       "57389                 NaN           7.0         NaN                  NaN  ...   \n",
       "57390                 NaN           7.0         NaN                  NaN  ...   \n",
       "57391                 NaN           7.0         NaN                  NaN  ...   \n",
       "57392                 NaN           7.0         NaN                  NaN  ...   \n",
       "57393                 NaN           7.0         NaN                  NaN  ...   \n",
       "\n",
       "       gdp_per_capita  extreme_poverty  cardiovasc_death_rate  \\\n",
       "57389             NaN              NaN                    NaN   \n",
       "57390             NaN              NaN                    NaN   \n",
       "57391             NaN              NaN                    NaN   \n",
       "57392             NaN              NaN                    NaN   \n",
       "57393             NaN              NaN                    NaN   \n",
       "\n",
       "       diabetes_prevalence  female_smokers  male_smokers  \\\n",
       "57389                  NaN             NaN           NaN   \n",
       "57390                  NaN             NaN           NaN   \n",
       "57391                  NaN             NaN           NaN   \n",
       "57392                  NaN             NaN           NaN   \n",
       "57393                  NaN             NaN           NaN   \n",
       "\n",
       "       handwashing_facilities  hospital_beds_per_thousand  life_expectancy  \\\n",
       "57389                     NaN                         NaN              NaN   \n",
       "57390                     NaN                         NaN              NaN   \n",
       "57391                     NaN                         NaN              NaN   \n",
       "57392                     NaN                         NaN              NaN   \n",
       "57393                     NaN                         NaN              NaN   \n",
       "\n",
       "       human_development_index  \n",
       "57389                      NaN  \n",
       "57390                      NaN  \n",
       "57391                      NaN  \n",
       "57392                      NaN  \n",
       "57393                      NaN  \n",
       "\n",
       "[5 rows x 49 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9e91f77f-a131-4b28-bbd4-817228393bd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2812306"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3dee481d-3dc1-4269-86c9-19fde0ac591f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(57394, 49)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "08c63138-a1cb-416b-85b4-a37a6b799887",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "iso_code                               object\n",
       "continent                              object\n",
       "location                               object\n",
       "date                                   object\n",
       "total_cases                           float64\n",
       "new_cases                             float64\n",
       "new_cases_smoothed                    float64\n",
       "total_deaths                          float64\n",
       "new_deaths                            float64\n",
       "new_deaths_smoothed                   float64\n",
       "total_cases_per_million               float64\n",
       "new_cases_per_million                 float64\n",
       "new_cases_smoothed_per_million        float64\n",
       "total_deaths_per_million              float64\n",
       "new_deaths_per_million                float64\n",
       "new_deaths_smoothed_per_million       float64\n",
       "reproduction_rate                     float64\n",
       "icu_patients                          float64\n",
       "icu_patients_per_million              float64\n",
       "hosp_patients                         float64\n",
       "hosp_patients_per_million             float64\n",
       "weekly_icu_admissions                 float64\n",
       "weekly_icu_admissions_per_million     float64\n",
       "weekly_hosp_admissions                float64\n",
       "weekly_hosp_admissions_per_million    float64\n",
       "total_tests                           float64\n",
       "new_tests                             float64\n",
       "total_tests_per_thousand              float64\n",
       "new_tests_per_thousand                float64\n",
       "new_tests_smoothed                    float64\n",
       "new_tests_smoothed_per_thousand       float64\n",
       "tests_per_case                        float64\n",
       "positive_rate                         float64\n",
       "stringency_index                      float64\n",
       "population                            float64\n",
       "population_density                    float64\n",
       "median_age                            float64\n",
       "aged_65_older                         float64\n",
       "aged_70_older                         float64\n",
       "gdp_per_capita                        float64\n",
       "extreme_poverty                       float64\n",
       "cardiovasc_death_rate                 float64\n",
       "diabetes_prevalence                   float64\n",
       "female_smokers                        float64\n",
       "male_smokers                          float64\n",
       "handwashing_facilities                float64\n",
       "hospital_beds_per_thousand            float64\n",
       "life_expectancy                       float64\n",
       "human_development_index               float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e48283b9-424e-4fd5-ae8d-34e5a6faf8a5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 57394 entries, 0 to 57393\n",
      "Data columns (total 49 columns):\n",
      " #   Column                              Non-Null Count  Dtype  \n",
      "---  ------                              --------------  -----  \n",
      " 0   iso_code                            57071 non-null  object \n",
      " 1   continent                           56748 non-null  object \n",
      " 2   location                            57394 non-null  object \n",
      " 3   date                                57394 non-null  object \n",
      " 4   total_cases                         53758 non-null  float64\n",
      " 5   new_cases                           56465 non-null  float64\n",
      " 6   new_cases_smoothed                  55652 non-null  float64\n",
      " 7   total_deaths                        44368 non-null  float64\n",
      " 8   new_deaths                          56465 non-null  float64\n",
      " 9   new_deaths_smoothed                 55652 non-null  float64\n",
      " 10  total_cases_per_million             53471 non-null  float64\n",
      " 11  new_cases_per_million               56401 non-null  float64\n",
      " 12  new_cases_smoothed_per_million      55587 non-null  float64\n",
      " 13  total_deaths_per_million            44096 non-null  float64\n",
      " 14  new_deaths_per_million              56401 non-null  float64\n",
      " 15  new_deaths_smoothed_per_million     55587 non-null  float64\n",
      " 16  reproduction_rate                   37696 non-null  float64\n",
      " 17  icu_patients                        4490 non-null   float64\n",
      " 18  icu_patients_per_million            4490 non-null   float64\n",
      " 19  hosp_patients                       5005 non-null   float64\n",
      " 20  hosp_patients_per_million           5005 non-null   float64\n",
      " 21  weekly_icu_admissions               357 non-null    float64\n",
      " 22  weekly_icu_admissions_per_million   357 non-null    float64\n",
      " 23  weekly_hosp_admissions              645 non-null    float64\n",
      " 24  weekly_hosp_admissions_per_million  645 non-null    float64\n",
      " 25  total_tests                         22017 non-null  float64\n",
      " 26  new_tests                           21787 non-null  float64\n",
      " 27  total_tests_per_thousand            22017 non-null  float64\n",
      " 28  new_tests_per_thousand              21787 non-null  float64\n",
      " 29  new_tests_smoothed                  24612 non-null  float64\n",
      " 30  new_tests_smoothed_per_thousand     24612 non-null  float64\n",
      " 31  tests_per_case                      22802 non-null  float64\n",
      " 32  positive_rate                       23211 non-null  float64\n",
      " 33  stringency_index                    47847 non-null  float64\n",
      " 34  population                          57071 non-null  float64\n",
      " 35  population_density                  54371 non-null  float64\n",
      " 36  median_age                          51034 non-null  float64\n",
      " 37  aged_65_older                       50265 non-null  float64\n",
      " 38  aged_70_older                       50768 non-null  float64\n",
      " 39  gdp_per_capita                      50367 non-null  float64\n",
      " 40  extreme_poverty                     33571 non-null  float64\n",
      " 41  cardiovasc_death_rate               51013 non-null  float64\n",
      " 42  diabetes_prevalence                 52881 non-null  float64\n",
      " 43  female_smokers                      39669 non-null  float64\n",
      " 44  male_smokers                        39156 non-null  float64\n",
      " 45  handwashing_facilities              24176 non-null  float64\n",
      " 46  hospital_beds_per_thousand          45936 non-null  float64\n",
      " 47  life_expectancy                     56336 non-null  float64\n",
      " 48  human_development_index             49247 non-null  float64\n",
      "dtypes: float64(45), object(4)\n",
      "memory usage: 21.5+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "3fa7a094-9c4b-4748-b142-1c968311a8d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>new_cases</th>\n",
       "      <th>new_cases_smoothed</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>new_deaths</th>\n",
       "      <th>new_deaths_smoothed</th>\n",
       "      <th>total_cases_per_million</th>\n",
       "      <th>new_cases_per_million</th>\n",
       "      <th>new_cases_smoothed_per_million</th>\n",
       "      <th>total_deaths_per_million</th>\n",
       "      <th>new_deaths_per_million</th>\n",
       "      <th>new_deaths_smoothed_per_million</th>\n",
       "      <th>reproduction_rate</th>\n",
       "      <th>icu_patients</th>\n",
       "      <th>icu_patients_per_million</th>\n",
       "      <th>hosp_patients</th>\n",
       "      <th>hosp_patients_per_million</th>\n",
       "      <th>weekly_icu_admissions</th>\n",
       "      <th>weekly_icu_admissions_per_million</th>\n",
       "      <th>weekly_hosp_admissions</th>\n",
       "      <th>weekly_hosp_admissions_per_million</th>\n",
       "      <th>total_tests</th>\n",
       "      <th>new_tests</th>\n",
       "      <th>total_tests_per_thousand</th>\n",
       "      <th>new_tests_per_thousand</th>\n",
       "      <th>new_tests_smoothed</th>\n",
       "      <th>new_tests_smoothed_per_thousand</th>\n",
       "      <th>tests_per_case</th>\n",
       "      <th>positive_rate</th>\n",
       "      <th>stringency_index</th>\n",
       "      <th>population</th>\n",
       "      <th>population_density</th>\n",
       "      <th>median_age</th>\n",
       "      <th>aged_65_older</th>\n",
       "      <th>aged_70_older</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>extreme_poverty</th>\n",
       "      <th>cardiovasc_death_rate</th>\n",
       "      <th>diabetes_prevalence</th>\n",
       "      <th>female_smokers</th>\n",
       "      <th>male_smokers</th>\n",
       "      <th>handwashing_facilities</th>\n",
       "      <th>hospital_beds_per_thousand</th>\n",
       "      <th>life_expectancy</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>57071</td>\n",
       "      <td>56748</td>\n",
       "      <td>57394</td>\n",
       "      <td>57394</td>\n",
       "      <td>53758.00</td>\n",
       "      <td>56465.00</td>\n",
       "      <td>55652.00</td>\n",
       "      <td>44368.00</td>\n",
       "      <td>56465.00</td>\n",
       "      <td>55652.00</td>\n",
       "      <td>53471.00</td>\n",
       "      <td>56401.00</td>\n",
       "      <td>55587.00</td>\n",
       "      <td>44096.00</td>\n",
       "      <td>56401.00</td>\n",
       "      <td>55587.00</td>\n",
       "      <td>37696.00</td>\n",
       "      <td>4490.00</td>\n",
       "      <td>4490.00</td>\n",
       "      <td>5005.00</td>\n",
       "      <td>5005.00</td>\n",
       "      <td>357.00</td>\n",
       "      <td>357.00</td>\n",
       "      <td>645.00</td>\n",
       "      <td>645.00</td>\n",
       "      <td>2.201700e+04</td>\n",
       "      <td>21787.00</td>\n",
       "      <td>22017.00</td>\n",
       "      <td>21787.00</td>\n",
       "      <td>24612.00</td>\n",
       "      <td>24612.00</td>\n",
       "      <td>22802.00</td>\n",
       "      <td>23211.00</td>\n",
       "      <td>47847.00</td>\n",
       "      <td>5.707100e+04</td>\n",
       "      <td>54371.00</td>\n",
       "      <td>51034.00</td>\n",
       "      <td>50265.00</td>\n",
       "      <td>50768.00</td>\n",
       "      <td>50367.00</td>\n",
       "      <td>33571.00</td>\n",
       "      <td>51013.00</td>\n",
       "      <td>52881.00</td>\n",
       "      <td>39669.00</td>\n",
       "      <td>39156.00</td>\n",
       "      <td>24176.00</td>\n",
       "      <td>45936.00</td>\n",
       "      <td>56336.00</td>\n",
       "      <td>49247.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>215</td>\n",
       "      <td>6</td>\n",
       "      <td>216</td>\n",
       "      <td>323</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>30/10/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>323</td>\n",
       "      <td>14828</td>\n",
       "      <td>323</td>\n",
       "      <td>215</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>167797.37</td>\n",
       "      <td>1953.58</td>\n",
       "      <td>1920.43</td>\n",
       "      <td>6858.64</td>\n",
       "      <td>47.05</td>\n",
       "      <td>46.84</td>\n",
       "      <td>3139.10</td>\n",
       "      <td>39.34</td>\n",
       "      <td>38.40</td>\n",
       "      <td>95.34</td>\n",
       "      <td>0.68</td>\n",
       "      <td>0.67</td>\n",
       "      <td>1.04</td>\n",
       "      <td>726.19</td>\n",
       "      <td>13.26</td>\n",
       "      <td>3867.25</td>\n",
       "      <td>76.56</td>\n",
       "      <td>249.26</td>\n",
       "      <td>7.28</td>\n",
       "      <td>2230.69</td>\n",
       "      <td>60.66</td>\n",
       "      <td>2.309838e+06</td>\n",
       "      <td>28478.32</td>\n",
       "      <td>78.92</td>\n",
       "      <td>0.92</td>\n",
       "      <td>27389.71</td>\n",
       "      <td>0.90</td>\n",
       "      <td>182.92</td>\n",
       "      <td>0.07</td>\n",
       "      <td>56.98</td>\n",
       "      <td>8.559938e+07</td>\n",
       "      <td>360.49</td>\n",
       "      <td>31.19</td>\n",
       "      <td>9.18</td>\n",
       "      <td>5.80</td>\n",
       "      <td>20620.17</td>\n",
       "      <td>12.44</td>\n",
       "      <td>252.65</td>\n",
       "      <td>8.07</td>\n",
       "      <td>10.74</td>\n",
       "      <td>32.64</td>\n",
       "      <td>52.09</td>\n",
       "      <td>3.09</td>\n",
       "      <td>73.94</td>\n",
       "      <td>0.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1693037.55</td>\n",
       "      <td>18269.65</td>\n",
       "      <td>17777.39</td>\n",
       "      <td>55780.81</td>\n",
       "      <td>390.85</td>\n",
       "      <td>378.27</td>\n",
       "      <td>6183.46</td>\n",
       "      <td>133.99</td>\n",
       "      <td>101.65</td>\n",
       "      <td>180.72</td>\n",
       "      <td>3.03</td>\n",
       "      <td>1.97</td>\n",
       "      <td>0.40</td>\n",
       "      <td>2031.11</td>\n",
       "      <td>18.79</td>\n",
       "      <td>9952.99</td>\n",
       "      <td>109.08</td>\n",
       "      <td>545.01</td>\n",
       "      <td>18.18</td>\n",
       "      <td>5305.47</td>\n",
       "      <td>174.85</td>\n",
       "      <td>1.053218e+07</td>\n",
       "      <td>114909.37</td>\n",
       "      <td>157.73</td>\n",
       "      <td>1.70</td>\n",
       "      <td>105980.94</td>\n",
       "      <td>1.57</td>\n",
       "      <td>877.85</td>\n",
       "      <td>0.09</td>\n",
       "      <td>25.85</td>\n",
       "      <td>6.017270e+08</td>\n",
       "      <td>1639.74</td>\n",
       "      <td>9.04</td>\n",
       "      <td>6.30</td>\n",
       "      <td>4.30</td>\n",
       "      <td>20311.00</td>\n",
       "      <td>19.43</td>\n",
       "      <td>117.52</td>\n",
       "      <td>4.19</td>\n",
       "      <td>10.47</td>\n",
       "      <td>13.45</td>\n",
       "      <td>31.65</td>\n",
       "      <td>2.51</td>\n",
       "      <td>7.40</td>\n",
       "      <td>0.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.00</td>\n",
       "      <td>-8261.00</td>\n",
       "      <td>-552.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>-1918.00</td>\n",
       "      <td>-232.14</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-2212.54</td>\n",
       "      <td>-269.98</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-67.90</td>\n",
       "      <td>-9.68</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-3743.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-0.40</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.54</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8.090000e+02</td>\n",
       "      <td>0.14</td>\n",
       "      <td>15.10</td>\n",
       "      <td>1.14</td>\n",
       "      <td>0.53</td>\n",
       "      <td>661.24</td>\n",
       "      <td>0.10</td>\n",
       "      <td>79.37</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.10</td>\n",
       "      <td>7.70</td>\n",
       "      <td>1.19</td>\n",
       "      <td>0.10</td>\n",
       "      <td>53.28</td>\n",
       "      <td>0.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>180.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.86</td>\n",
       "      <td>13.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>90.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.26</td>\n",
       "      <td>3.98</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.87</td>\n",
       "      <td>9.00</td>\n",
       "      <td>1.68</td>\n",
       "      <td>38.00</td>\n",
       "      <td>10.55</td>\n",
       "      <td>4.03</td>\n",
       "      <td>0.82</td>\n",
       "      <td>20.14</td>\n",
       "      <td>4.17</td>\n",
       "      <td>6.082500e+04</td>\n",
       "      <td>1039.00</td>\n",
       "      <td>4.05</td>\n",
       "      <td>0.07</td>\n",
       "      <td>1108.75</td>\n",
       "      <td>0.07</td>\n",
       "      <td>10.61</td>\n",
       "      <td>0.01</td>\n",
       "      <td>39.81</td>\n",
       "      <td>1.326539e+06</td>\n",
       "      <td>37.73</td>\n",
       "      <td>23.20</td>\n",
       "      <td>3.55</td>\n",
       "      <td>2.08</td>\n",
       "      <td>5321.44</td>\n",
       "      <td>0.50</td>\n",
       "      <td>156.14</td>\n",
       "      <td>5.31</td>\n",
       "      <td>1.90</td>\n",
       "      <td>21.40</td>\n",
       "      <td>21.22</td>\n",
       "      <td>1.30</td>\n",
       "      <td>69.87</td>\n",
       "      <td>0.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2070.00</td>\n",
       "      <td>14.00</td>\n",
       "      <td>19.43</td>\n",
       "      <td>84.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.29</td>\n",
       "      <td>593.66</td>\n",
       "      <td>2.19</td>\n",
       "      <td>3.86</td>\n",
       "      <td>20.38</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.04</td>\n",
       "      <td>48.00</td>\n",
       "      <td>5.90</td>\n",
       "      <td>213.00</td>\n",
       "      <td>35.55</td>\n",
       "      <td>25.78</td>\n",
       "      <td>2.08</td>\n",
       "      <td>146.81</td>\n",
       "      <td>15.00</td>\n",
       "      <td>2.656400e+05</td>\n",
       "      <td>3715.00</td>\n",
       "      <td>20.96</td>\n",
       "      <td>0.34</td>\n",
       "      <td>4024.00</td>\n",
       "      <td>0.35</td>\n",
       "      <td>29.37</td>\n",
       "      <td>0.03</td>\n",
       "      <td>60.65</td>\n",
       "      <td>8.278737e+06</td>\n",
       "      <td>88.12</td>\n",
       "      <td>31.10</td>\n",
       "      <td>6.93</td>\n",
       "      <td>4.39</td>\n",
       "      <td>13913.84</td>\n",
       "      <td>2.00</td>\n",
       "      <td>238.34</td>\n",
       "      <td>7.11</td>\n",
       "      <td>6.40</td>\n",
       "      <td>31.40</td>\n",
       "      <td>52.23</td>\n",
       "      <td>2.50</td>\n",
       "      <td>75.34</td>\n",
       "      <td>0.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22356.75</td>\n",
       "      <td>235.00</td>\n",
       "      <td>245.29</td>\n",
       "      <td>727.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3487.05</td>\n",
       "      <td>25.94</td>\n",
       "      <td>29.68</td>\n",
       "      <td>90.57</td>\n",
       "      <td>0.29</td>\n",
       "      <td>0.42</td>\n",
       "      <td>1.22</td>\n",
       "      <td>293.00</td>\n",
       "      <td>17.46</td>\n",
       "      <td>1617.00</td>\n",
       "      <td>93.39</td>\n",
       "      <td>233.09</td>\n",
       "      <td>6.08</td>\n",
       "      <td>1077.10</td>\n",
       "      <td>45.03</td>\n",
       "      <td>1.078539e+06</td>\n",
       "      <td>14107.00</td>\n",
       "      <td>85.92</td>\n",
       "      <td>1.07</td>\n",
       "      <td>15134.25</td>\n",
       "      <td>1.08</td>\n",
       "      <td>94.79</td>\n",
       "      <td>0.09</td>\n",
       "      <td>77.78</td>\n",
       "      <td>2.982597e+07</td>\n",
       "      <td>214.24</td>\n",
       "      <td>39.70</td>\n",
       "      <td>14.74</td>\n",
       "      <td>9.40</td>\n",
       "      <td>31400.84</td>\n",
       "      <td>18.10</td>\n",
       "      <td>318.99</td>\n",
       "      <td>10.39</td>\n",
       "      <td>19.60</td>\n",
       "      <td>40.90</td>\n",
       "      <td>83.74</td>\n",
       "      <td>4.20</td>\n",
       "      <td>79.38</td>\n",
       "      <td>0.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>55154651.00</td>\n",
       "      <td>646281.00</td>\n",
       "      <td>584981.86</td>\n",
       "      <td>1328537.00</td>\n",
       "      <td>10600.00</td>\n",
       "      <td>9027.71</td>\n",
       "      <td>76541.77</td>\n",
       "      <td>8652.66</td>\n",
       "      <td>2472.19</td>\n",
       "      <td>1248.01</td>\n",
       "      <td>215.38</td>\n",
       "      <td>63.14</td>\n",
       "      <td>6.72</td>\n",
       "      <td>15130.00</td>\n",
       "      <td>126.84</td>\n",
       "      <td>65368.00</td>\n",
       "      <td>773.46</td>\n",
       "      <td>4375.41</td>\n",
       "      <td>192.21</td>\n",
       "      <td>46641.41</td>\n",
       "      <td>2424.48</td>\n",
       "      <td>1.660391e+08</td>\n",
       "      <td>1531394.00</td>\n",
       "      <td>1926.64</td>\n",
       "      <td>26.07</td>\n",
       "      <td>1296553.00</td>\n",
       "      <td>19.17</td>\n",
       "      <td>45864.00</td>\n",
       "      <td>0.65</td>\n",
       "      <td>100.00</td>\n",
       "      <td>7.794799e+09</td>\n",
       "      <td>19347.50</td>\n",
       "      <td>48.20</td>\n",
       "      <td>27.05</td>\n",
       "      <td>18.49</td>\n",
       "      <td>116935.60</td>\n",
       "      <td>77.60</td>\n",
       "      <td>724.42</td>\n",
       "      <td>30.53</td>\n",
       "      <td>44.00</td>\n",
       "      <td>78.10</td>\n",
       "      <td>99.00</td>\n",
       "      <td>13.80</td>\n",
       "      <td>86.75</td>\n",
       "      <td>0.95</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       iso_code continent     location      date  total_cases  new_cases  \\\n",
       "count     57071     56748        57394     57394     53758.00   56465.00   \n",
       "unique      215         6          216       323          NaN        NaN   \n",
       "top         AFG    Europe  Afghanistan  30/10/20          NaN        NaN   \n",
       "freq        323     14828          323       215          NaN        NaN   \n",
       "mean        NaN       NaN          NaN       NaN    167797.37    1953.58   \n",
       "std         NaN       NaN          NaN       NaN   1693037.55   18269.65   \n",
       "min         NaN       NaN          NaN       NaN         1.00   -8261.00   \n",
       "25%         NaN       NaN          NaN       NaN       180.00       0.00   \n",
       "50%         NaN       NaN          NaN       NaN      2070.00      14.00   \n",
       "75%         NaN       NaN          NaN       NaN     22356.75     235.00   \n",
       "max         NaN       NaN          NaN       NaN  55154651.00  646281.00   \n",
       "\n",
       "        new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  \\\n",
       "count             55652.00      44368.00    56465.00             55652.00   \n",
       "unique                 NaN           NaN         NaN                  NaN   \n",
       "top                    NaN           NaN         NaN                  NaN   \n",
       "freq                   NaN           NaN         NaN                  NaN   \n",
       "mean               1920.43       6858.64       47.05                46.84   \n",
       "std               17777.39      55780.81      390.85               378.27   \n",
       "min                -552.00          1.00    -1918.00              -232.14   \n",
       "25%                   0.86         13.00        0.00                 0.00   \n",
       "50%                  19.43         84.00        0.00                 0.29   \n",
       "75%                 245.29        727.00        4.00                 4.00   \n",
       "max              584981.86    1328537.00    10600.00              9027.71   \n",
       "\n",
       "        total_cases_per_million  new_cases_per_million  \\\n",
       "count                  53471.00               56401.00   \n",
       "unique                      NaN                    NaN   \n",
       "top                         NaN                    NaN   \n",
       "freq                        NaN                    NaN   \n",
       "mean                    3139.10                  39.34   \n",
       "std                     6183.46                 133.99   \n",
       "min                        0.00               -2212.54   \n",
       "25%                       90.03                   0.00   \n",
       "50%                      593.66                   2.19   \n",
       "75%                     3487.05                  25.94   \n",
       "max                    76541.77                8652.66   \n",
       "\n",
       "        new_cases_smoothed_per_million  total_deaths_per_million  \\\n",
       "count                         55587.00                  44096.00   \n",
       "unique                             NaN                       NaN   \n",
       "top                                NaN                       NaN   \n",
       "freq                               NaN                       NaN   \n",
       "mean                             38.40                     95.34   \n",
       "std                             101.65                    180.72   \n",
       "min                            -269.98                      0.00   \n",
       "25%                               0.26                      3.98   \n",
       "50%                               3.86                     20.38   \n",
       "75%                              29.68                     90.57   \n",
       "max                            2472.19                   1248.01   \n",
       "\n",
       "        new_deaths_per_million  new_deaths_smoothed_per_million  \\\n",
       "count                 56401.00                         55587.00   \n",
       "unique                     NaN                              NaN   \n",
       "top                        NaN                              NaN   \n",
       "freq                       NaN                              NaN   \n",
       "mean                      0.68                             0.67   \n",
       "std                       3.03                             1.97   \n",
       "min                     -67.90                            -9.68   \n",
       "25%                       0.00                             0.00   \n",
       "50%                       0.00                             0.03   \n",
       "75%                       0.29                             0.42   \n",
       "max                     215.38                            63.14   \n",
       "\n",
       "        reproduction_rate  icu_patients  icu_patients_per_million  \\\n",
       "count            37696.00       4490.00                   4490.00   \n",
       "unique                NaN           NaN                       NaN   \n",
       "top                   NaN           NaN                       NaN   \n",
       "freq                  NaN           NaN                       NaN   \n",
       "mean                 1.04        726.19                     13.26   \n",
       "std                  0.40       2031.11                     18.79   \n",
       "min                  0.00          0.00                      0.00   \n",
       "25%                  0.87          9.00                      1.68   \n",
       "50%                  1.04         48.00                      5.90   \n",
       "75%                  1.22        293.00                     17.46   \n",
       "max                  6.72      15130.00                    126.84   \n",
       "\n",
       "        hosp_patients  hosp_patients_per_million  weekly_icu_admissions  \\\n",
       "count         5005.00                    5005.00                 357.00   \n",
       "unique            NaN                        NaN                    NaN   \n",
       "top               NaN                        NaN                    NaN   \n",
       "freq              NaN                        NaN                    NaN   \n",
       "mean          3867.25                      76.56                 249.26   \n",
       "std           9952.99                     109.08                 545.01   \n",
       "min              0.00                       0.00                   0.00   \n",
       "25%             38.00                      10.55                   4.03   \n",
       "50%            213.00                      35.55                  25.78   \n",
       "75%           1617.00                      93.39                 233.09   \n",
       "max          65368.00                     773.46                4375.41   \n",
       "\n",
       "        weekly_icu_admissions_per_million  weekly_hosp_admissions  \\\n",
       "count                              357.00                  645.00   \n",
       "unique                                NaN                     NaN   \n",
       "top                                   NaN                     NaN   \n",
       "freq                                  NaN                     NaN   \n",
       "mean                                 7.28                 2230.69   \n",
       "std                                 18.18                 5305.47   \n",
       "min                                  0.00                    0.00   \n",
       "25%                                  0.82                   20.14   \n",
       "50%                                  2.08                  146.81   \n",
       "75%                                  6.08                 1077.10   \n",
       "max                                192.21                46641.41   \n",
       "\n",
       "        weekly_hosp_admissions_per_million   total_tests   new_tests  \\\n",
       "count                               645.00  2.201700e+04    21787.00   \n",
       "unique                                 NaN           NaN         NaN   \n",
       "top                                    NaN           NaN         NaN   \n",
       "freq                                   NaN           NaN         NaN   \n",
       "mean                                 60.66  2.309838e+06    28478.32   \n",
       "std                                 174.85  1.053218e+07   114909.37   \n",
       "min                                   0.00  1.000000e+00    -3743.00   \n",
       "25%                                   4.17  6.082500e+04     1039.00   \n",
       "50%                                  15.00  2.656400e+05     3715.00   \n",
       "75%                                  45.03  1.078539e+06    14107.00   \n",
       "max                                2424.48  1.660391e+08  1531394.00   \n",
       "\n",
       "        total_tests_per_thousand  new_tests_per_thousand  new_tests_smoothed  \\\n",
       "count                   22017.00                21787.00            24612.00   \n",
       "unique                       NaN                     NaN                 NaN   \n",
       "top                          NaN                     NaN                 NaN   \n",
       "freq                         NaN                     NaN                 NaN   \n",
       "mean                       78.92                    0.92            27389.71   \n",
       "std                       157.73                    1.70           105980.94   \n",
       "min                         0.00                   -0.40                0.00   \n",
       "25%                         4.05                    0.07             1108.75   \n",
       "50%                        20.96                    0.34             4024.00   \n",
       "75%                        85.92                    1.07            15134.25   \n",
       "max                      1926.64                   26.07          1296553.00   \n",
       "\n",
       "        new_tests_smoothed_per_thousand  tests_per_case  positive_rate  \\\n",
       "count                          24612.00        22802.00       23211.00   \n",
       "unique                              NaN             NaN            NaN   \n",
       "top                                 NaN             NaN            NaN   \n",
       "freq                                NaN             NaN            NaN   \n",
       "mean                               0.90          182.92           0.07   \n",
       "std                                1.57          877.85           0.09   \n",
       "min                                0.00            1.54           0.00   \n",
       "25%                                0.07           10.61           0.01   \n",
       "50%                                0.35           29.37           0.03   \n",
       "75%                                1.08           94.79           0.09   \n",
       "max                               19.17        45864.00           0.65   \n",
       "\n",
       "        stringency_index    population  population_density  median_age  \\\n",
       "count           47847.00  5.707100e+04            54371.00    51034.00   \n",
       "unique               NaN           NaN                 NaN         NaN   \n",
       "top                  NaN           NaN                 NaN         NaN   \n",
       "freq                 NaN           NaN                 NaN         NaN   \n",
       "mean               56.98  8.559938e+07              360.49       31.19   \n",
       "std                25.85  6.017270e+08             1639.74        9.04   \n",
       "min                 0.00  8.090000e+02                0.14       15.10   \n",
       "25%                39.81  1.326539e+06               37.73       23.20   \n",
       "50%                60.65  8.278737e+06               88.12       31.10   \n",
       "75%                77.78  2.982597e+07              214.24       39.70   \n",
       "max               100.00  7.794799e+09            19347.50       48.20   \n",
       "\n",
       "        aged_65_older  aged_70_older  gdp_per_capita  extreme_poverty  \\\n",
       "count        50265.00       50768.00        50367.00         33571.00   \n",
       "unique            NaN            NaN             NaN              NaN   \n",
       "top               NaN            NaN             NaN              NaN   \n",
       "freq              NaN            NaN             NaN              NaN   \n",
       "mean             9.18           5.80        20620.17            12.44   \n",
       "std              6.30           4.30        20311.00            19.43   \n",
       "min              1.14           0.53          661.24             0.10   \n",
       "25%              3.55           2.08         5321.44             0.50   \n",
       "50%              6.93           4.39        13913.84             2.00   \n",
       "75%             14.74           9.40        31400.84            18.10   \n",
       "max             27.05          18.49       116935.60            77.60   \n",
       "\n",
       "        cardiovasc_death_rate  diabetes_prevalence  female_smokers  \\\n",
       "count                51013.00             52881.00        39669.00   \n",
       "unique                    NaN                  NaN             NaN   \n",
       "top                       NaN                  NaN             NaN   \n",
       "freq                      NaN                  NaN             NaN   \n",
       "mean                   252.65                 8.07           10.74   \n",
       "std                    117.52                 4.19           10.47   \n",
       "min                     79.37                 0.99            0.10   \n",
       "25%                    156.14                 5.31            1.90   \n",
       "50%                    238.34                 7.11            6.40   \n",
       "75%                    318.99                10.39           19.60   \n",
       "max                    724.42                30.53           44.00   \n",
       "\n",
       "        male_smokers  handwashing_facilities  hospital_beds_per_thousand  \\\n",
       "count       39156.00                24176.00                    45936.00   \n",
       "unique           NaN                     NaN                         NaN   \n",
       "top              NaN                     NaN                         NaN   \n",
       "freq             NaN                     NaN                         NaN   \n",
       "mean           32.64                   52.09                        3.09   \n",
       "std            13.45                   31.65                        2.51   \n",
       "min             7.70                    1.19                        0.10   \n",
       "25%            21.40                   21.22                        1.30   \n",
       "50%            31.40                   52.23                        2.50   \n",
       "75%            40.90                   83.74                        4.20   \n",
       "max            78.10                   99.00                       13.80   \n",
       "\n",
       "        life_expectancy  human_development_index  \n",
       "count          56336.00                 49247.00  \n",
       "unique              NaN                      NaN  \n",
       "top                 NaN                      NaN  \n",
       "freq                NaN                      NaN  \n",
       "mean              73.94                     0.72  \n",
       "std                7.40                     0.15  \n",
       "min               53.28                     0.35  \n",
       "25%               69.87                     0.60  \n",
       "50%               75.34                     0.75  \n",
       "75%               79.38                     0.85  \n",
       "max               86.75                     0.95  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.set_option('display.max_columns',None)\n",
    "df.describe(include=\"all\").round(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "73af428b-e33d-4362-9c19-50318d7ac3e6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>new_cases</th>\n",
       "      <th>new_cases_smoothed</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>new_deaths</th>\n",
       "      <th>new_deaths_smoothed</th>\n",
       "      <th>total_cases_per_million</th>\n",
       "      <th>new_cases_per_million</th>\n",
       "      <th>new_cases_smoothed_per_million</th>\n",
       "      <th>total_deaths_per_million</th>\n",
       "      <th>new_deaths_per_million</th>\n",
       "      <th>new_deaths_smoothed_per_million</th>\n",
       "      <th>reproduction_rate</th>\n",
       "      <th>icu_patients</th>\n",
       "      <th>icu_patients_per_million</th>\n",
       "      <th>hosp_patients</th>\n",
       "      <th>hosp_patients_per_million</th>\n",
       "      <th>weekly_icu_admissions</th>\n",
       "      <th>weekly_icu_admissions_per_million</th>\n",
       "      <th>weekly_hosp_admissions</th>\n",
       "      <th>weekly_hosp_admissions_per_million</th>\n",
       "      <th>total_tests</th>\n",
       "      <th>new_tests</th>\n",
       "      <th>total_tests_per_thousand</th>\n",
       "      <th>new_tests_per_thousand</th>\n",
       "      <th>new_tests_smoothed</th>\n",
       "      <th>new_tests_smoothed_per_thousand</th>\n",
       "      <th>tests_per_case</th>\n",
       "      <th>positive_rate</th>\n",
       "      <th>stringency_index</th>\n",
       "      <th>population</th>\n",
       "      <th>population_density</th>\n",
       "      <th>median_age</th>\n",
       "      <th>aged_65_older</th>\n",
       "      <th>aged_70_older</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>extreme_poverty</th>\n",
       "      <th>cardiovasc_death_rate</th>\n",
       "      <th>diabetes_prevalence</th>\n",
       "      <th>female_smokers</th>\n",
       "      <th>male_smokers</th>\n",
       "      <th>handwashing_facilities</th>\n",
       "      <th>hospital_beds_per_thousand</th>\n",
       "      <th>life_expectancy</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>57071</td>\n",
       "      <td>56748</td>\n",
       "      <td>57394</td>\n",
       "      <td>57394</td>\n",
       "      <td>53758.00</td>\n",
       "      <td>56465.00</td>\n",
       "      <td>55652.00</td>\n",
       "      <td>44368.00</td>\n",
       "      <td>56465.00</td>\n",
       "      <td>55652.00</td>\n",
       "      <td>53471.00</td>\n",
       "      <td>56401.00</td>\n",
       "      <td>55587.00</td>\n",
       "      <td>44096.00</td>\n",
       "      <td>56401.00</td>\n",
       "      <td>55587.00</td>\n",
       "      <td>37696.00</td>\n",
       "      <td>4490.00</td>\n",
       "      <td>4490.00</td>\n",
       "      <td>5005.00</td>\n",
       "      <td>5005.00</td>\n",
       "      <td>357.00</td>\n",
       "      <td>357.00</td>\n",
       "      <td>645.00</td>\n",
       "      <td>645.00</td>\n",
       "      <td>2.201700e+04</td>\n",
       "      <td>21787.00</td>\n",
       "      <td>22017.00</td>\n",
       "      <td>21787.00</td>\n",
       "      <td>24612.00</td>\n",
       "      <td>24612.00</td>\n",
       "      <td>22802.00</td>\n",
       "      <td>23211.00</td>\n",
       "      <td>47847.00</td>\n",
       "      <td>5.707100e+04</td>\n",
       "      <td>54371.00</td>\n",
       "      <td>51034.00</td>\n",
       "      <td>50265.00</td>\n",
       "      <td>50768.00</td>\n",
       "      <td>50367.00</td>\n",
       "      <td>33571.00</td>\n",
       "      <td>51013.00</td>\n",
       "      <td>52881.00</td>\n",
       "      <td>39669.00</td>\n",
       "      <td>39156.00</td>\n",
       "      <td>24176.00</td>\n",
       "      <td>45936.00</td>\n",
       "      <td>56336.00</td>\n",
       "      <td>49247.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>215</td>\n",
       "      <td>6</td>\n",
       "      <td>216</td>\n",
       "      <td>323</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>30/10/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>323</td>\n",
       "      <td>14828</td>\n",
       "      <td>323</td>\n",
       "      <td>215</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>167797.37</td>\n",
       "      <td>1953.58</td>\n",
       "      <td>1920.43</td>\n",
       "      <td>6858.64</td>\n",
       "      <td>47.05</td>\n",
       "      <td>46.84</td>\n",
       "      <td>3139.10</td>\n",
       "      <td>39.34</td>\n",
       "      <td>38.40</td>\n",
       "      <td>95.34</td>\n",
       "      <td>0.68</td>\n",
       "      <td>0.67</td>\n",
       "      <td>1.04</td>\n",
       "      <td>726.19</td>\n",
       "      <td>13.26</td>\n",
       "      <td>3867.25</td>\n",
       "      <td>76.56</td>\n",
       "      <td>249.26</td>\n",
       "      <td>7.28</td>\n",
       "      <td>2230.69</td>\n",
       "      <td>60.66</td>\n",
       "      <td>2.309838e+06</td>\n",
       "      <td>28478.32</td>\n",
       "      <td>78.92</td>\n",
       "      <td>0.92</td>\n",
       "      <td>27389.71</td>\n",
       "      <td>0.90</td>\n",
       "      <td>182.92</td>\n",
       "      <td>0.07</td>\n",
       "      <td>56.98</td>\n",
       "      <td>8.559938e+07</td>\n",
       "      <td>360.49</td>\n",
       "      <td>31.19</td>\n",
       "      <td>9.18</td>\n",
       "      <td>5.80</td>\n",
       "      <td>20620.17</td>\n",
       "      <td>12.44</td>\n",
       "      <td>252.65</td>\n",
       "      <td>8.07</td>\n",
       "      <td>10.74</td>\n",
       "      <td>32.64</td>\n",
       "      <td>52.09</td>\n",
       "      <td>3.09</td>\n",
       "      <td>73.94</td>\n",
       "      <td>0.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1693037.55</td>\n",
       "      <td>18269.65</td>\n",
       "      <td>17777.39</td>\n",
       "      <td>55780.81</td>\n",
       "      <td>390.85</td>\n",
       "      <td>378.27</td>\n",
       "      <td>6183.46</td>\n",
       "      <td>133.99</td>\n",
       "      <td>101.65</td>\n",
       "      <td>180.72</td>\n",
       "      <td>3.03</td>\n",
       "      <td>1.97</td>\n",
       "      <td>0.40</td>\n",
       "      <td>2031.11</td>\n",
       "      <td>18.79</td>\n",
       "      <td>9952.99</td>\n",
       "      <td>109.08</td>\n",
       "      <td>545.01</td>\n",
       "      <td>18.18</td>\n",
       "      <td>5305.47</td>\n",
       "      <td>174.85</td>\n",
       "      <td>1.053218e+07</td>\n",
       "      <td>114909.37</td>\n",
       "      <td>157.73</td>\n",
       "      <td>1.70</td>\n",
       "      <td>105980.94</td>\n",
       "      <td>1.57</td>\n",
       "      <td>877.85</td>\n",
       "      <td>0.09</td>\n",
       "      <td>25.85</td>\n",
       "      <td>6.017270e+08</td>\n",
       "      <td>1639.74</td>\n",
       "      <td>9.04</td>\n",
       "      <td>6.30</td>\n",
       "      <td>4.30</td>\n",
       "      <td>20311.00</td>\n",
       "      <td>19.43</td>\n",
       "      <td>117.52</td>\n",
       "      <td>4.19</td>\n",
       "      <td>10.47</td>\n",
       "      <td>13.45</td>\n",
       "      <td>31.65</td>\n",
       "      <td>2.51</td>\n",
       "      <td>7.40</td>\n",
       "      <td>0.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.00</td>\n",
       "      <td>-8261.00</td>\n",
       "      <td>-552.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>-1918.00</td>\n",
       "      <td>-232.14</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-2212.54</td>\n",
       "      <td>-269.98</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-67.90</td>\n",
       "      <td>-9.68</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-3743.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-0.40</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.54</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8.090000e+02</td>\n",
       "      <td>0.14</td>\n",
       "      <td>15.10</td>\n",
       "      <td>1.14</td>\n",
       "      <td>0.53</td>\n",
       "      <td>661.24</td>\n",
       "      <td>0.10</td>\n",
       "      <td>79.37</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.10</td>\n",
       "      <td>7.70</td>\n",
       "      <td>1.19</td>\n",
       "      <td>0.10</td>\n",
       "      <td>53.28</td>\n",
       "      <td>0.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>180.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.86</td>\n",
       "      <td>13.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>90.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.26</td>\n",
       "      <td>3.98</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.87</td>\n",
       "      <td>9.00</td>\n",
       "      <td>1.68</td>\n",
       "      <td>38.00</td>\n",
       "      <td>10.55</td>\n",
       "      <td>4.03</td>\n",
       "      <td>0.82</td>\n",
       "      <td>20.14</td>\n",
       "      <td>4.17</td>\n",
       "      <td>6.082500e+04</td>\n",
       "      <td>1039.00</td>\n",
       "      <td>4.05</td>\n",
       "      <td>0.07</td>\n",
       "      <td>1108.75</td>\n",
       "      <td>0.07</td>\n",
       "      <td>10.61</td>\n",
       "      <td>0.01</td>\n",
       "      <td>39.81</td>\n",
       "      <td>1.326539e+06</td>\n",
       "      <td>37.73</td>\n",
       "      <td>23.20</td>\n",
       "      <td>3.55</td>\n",
       "      <td>2.08</td>\n",
       "      <td>5321.44</td>\n",
       "      <td>0.50</td>\n",
       "      <td>156.14</td>\n",
       "      <td>5.31</td>\n",
       "      <td>1.90</td>\n",
       "      <td>21.40</td>\n",
       "      <td>21.22</td>\n",
       "      <td>1.30</td>\n",
       "      <td>69.87</td>\n",
       "      <td>0.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2070.00</td>\n",
       "      <td>14.00</td>\n",
       "      <td>19.43</td>\n",
       "      <td>84.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.29</td>\n",
       "      <td>593.66</td>\n",
       "      <td>2.19</td>\n",
       "      <td>3.86</td>\n",
       "      <td>20.38</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.04</td>\n",
       "      <td>48.00</td>\n",
       "      <td>5.90</td>\n",
       "      <td>213.00</td>\n",
       "      <td>35.55</td>\n",
       "      <td>25.78</td>\n",
       "      <td>2.08</td>\n",
       "      <td>146.81</td>\n",
       "      <td>15.00</td>\n",
       "      <td>2.656400e+05</td>\n",
       "      <td>3715.00</td>\n",
       "      <td>20.96</td>\n",
       "      <td>0.34</td>\n",
       "      <td>4024.00</td>\n",
       "      <td>0.35</td>\n",
       "      <td>29.37</td>\n",
       "      <td>0.03</td>\n",
       "      <td>60.65</td>\n",
       "      <td>8.278737e+06</td>\n",
       "      <td>88.12</td>\n",
       "      <td>31.10</td>\n",
       "      <td>6.93</td>\n",
       "      <td>4.39</td>\n",
       "      <td>13913.84</td>\n",
       "      <td>2.00</td>\n",
       "      <td>238.34</td>\n",
       "      <td>7.11</td>\n",
       "      <td>6.40</td>\n",
       "      <td>31.40</td>\n",
       "      <td>52.23</td>\n",
       "      <td>2.50</td>\n",
       "      <td>75.34</td>\n",
       "      <td>0.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22356.75</td>\n",
       "      <td>235.00</td>\n",
       "      <td>245.29</td>\n",
       "      <td>727.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3487.05</td>\n",
       "      <td>25.94</td>\n",
       "      <td>29.68</td>\n",
       "      <td>90.57</td>\n",
       "      <td>0.29</td>\n",
       "      <td>0.42</td>\n",
       "      <td>1.22</td>\n",
       "      <td>293.00</td>\n",
       "      <td>17.46</td>\n",
       "      <td>1617.00</td>\n",
       "      <td>93.39</td>\n",
       "      <td>233.09</td>\n",
       "      <td>6.08</td>\n",
       "      <td>1077.10</td>\n",
       "      <td>45.03</td>\n",
       "      <td>1.078539e+06</td>\n",
       "      <td>14107.00</td>\n",
       "      <td>85.92</td>\n",
       "      <td>1.07</td>\n",
       "      <td>15134.25</td>\n",
       "      <td>1.08</td>\n",
       "      <td>94.79</td>\n",
       "      <td>0.09</td>\n",
       "      <td>77.78</td>\n",
       "      <td>2.982597e+07</td>\n",
       "      <td>214.24</td>\n",
       "      <td>39.70</td>\n",
       "      <td>14.74</td>\n",
       "      <td>9.40</td>\n",
       "      <td>31400.84</td>\n",
       "      <td>18.10</td>\n",
       "      <td>318.99</td>\n",
       "      <td>10.39</td>\n",
       "      <td>19.60</td>\n",
       "      <td>40.90</td>\n",
       "      <td>83.74</td>\n",
       "      <td>4.20</td>\n",
       "      <td>79.38</td>\n",
       "      <td>0.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>55154651.00</td>\n",
       "      <td>646281.00</td>\n",
       "      <td>584981.86</td>\n",
       "      <td>1328537.00</td>\n",
       "      <td>10600.00</td>\n",
       "      <td>9027.71</td>\n",
       "      <td>76541.77</td>\n",
       "      <td>8652.66</td>\n",
       "      <td>2472.19</td>\n",
       "      <td>1248.01</td>\n",
       "      <td>215.38</td>\n",
       "      <td>63.14</td>\n",
       "      <td>6.72</td>\n",
       "      <td>15130.00</td>\n",
       "      <td>126.84</td>\n",
       "      <td>65368.00</td>\n",
       "      <td>773.46</td>\n",
       "      <td>4375.41</td>\n",
       "      <td>192.21</td>\n",
       "      <td>46641.41</td>\n",
       "      <td>2424.48</td>\n",
       "      <td>1.660391e+08</td>\n",
       "      <td>1531394.00</td>\n",
       "      <td>1926.64</td>\n",
       "      <td>26.07</td>\n",
       "      <td>1296553.00</td>\n",
       "      <td>19.17</td>\n",
       "      <td>45864.00</td>\n",
       "      <td>0.65</td>\n",
       "      <td>100.00</td>\n",
       "      <td>7.794799e+09</td>\n",
       "      <td>19347.50</td>\n",
       "      <td>48.20</td>\n",
       "      <td>27.05</td>\n",
       "      <td>18.49</td>\n",
       "      <td>116935.60</td>\n",
       "      <td>77.60</td>\n",
       "      <td>724.42</td>\n",
       "      <td>30.53</td>\n",
       "      <td>44.00</td>\n",
       "      <td>78.10</td>\n",
       "      <td>99.00</td>\n",
       "      <td>13.80</td>\n",
       "      <td>86.75</td>\n",
       "      <td>0.95</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       iso_code continent     location      date  total_cases  new_cases  \\\n",
       "count     57071     56748        57394     57394     53758.00   56465.00   \n",
       "unique      215         6          216       323          NaN        NaN   \n",
       "top         AFG    Europe  Afghanistan  30/10/20          NaN        NaN   \n",
       "freq        323     14828          323       215          NaN        NaN   \n",
       "mean        NaN       NaN          NaN       NaN    167797.37    1953.58   \n",
       "std         NaN       NaN          NaN       NaN   1693037.55   18269.65   \n",
       "min         NaN       NaN          NaN       NaN         1.00   -8261.00   \n",
       "25%         NaN       NaN          NaN       NaN       180.00       0.00   \n",
       "50%         NaN       NaN          NaN       NaN      2070.00      14.00   \n",
       "75%         NaN       NaN          NaN       NaN     22356.75     235.00   \n",
       "max         NaN       NaN          NaN       NaN  55154651.00  646281.00   \n",
       "\n",
       "        new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  \\\n",
       "count             55652.00      44368.00    56465.00             55652.00   \n",
       "unique                 NaN           NaN         NaN                  NaN   \n",
       "top                    NaN           NaN         NaN                  NaN   \n",
       "freq                   NaN           NaN         NaN                  NaN   \n",
       "mean               1920.43       6858.64       47.05                46.84   \n",
       "std               17777.39      55780.81      390.85               378.27   \n",
       "min                -552.00          1.00    -1918.00              -232.14   \n",
       "25%                   0.86         13.00        0.00                 0.00   \n",
       "50%                  19.43         84.00        0.00                 0.29   \n",
       "75%                 245.29        727.00        4.00                 4.00   \n",
       "max              584981.86    1328537.00    10600.00              9027.71   \n",
       "\n",
       "        total_cases_per_million  new_cases_per_million  \\\n",
       "count                  53471.00               56401.00   \n",
       "unique                      NaN                    NaN   \n",
       "top                         NaN                    NaN   \n",
       "freq                        NaN                    NaN   \n",
       "mean                    3139.10                  39.34   \n",
       "std                     6183.46                 133.99   \n",
       "min                        0.00               -2212.54   \n",
       "25%                       90.03                   0.00   \n",
       "50%                      593.66                   2.19   \n",
       "75%                     3487.05                  25.94   \n",
       "max                    76541.77                8652.66   \n",
       "\n",
       "        new_cases_smoothed_per_million  total_deaths_per_million  \\\n",
       "count                         55587.00                  44096.00   \n",
       "unique                             NaN                       NaN   \n",
       "top                                NaN                       NaN   \n",
       "freq                               NaN                       NaN   \n",
       "mean                             38.40                     95.34   \n",
       "std                             101.65                    180.72   \n",
       "min                            -269.98                      0.00   \n",
       "25%                               0.26                      3.98   \n",
       "50%                               3.86                     20.38   \n",
       "75%                              29.68                     90.57   \n",
       "max                            2472.19                   1248.01   \n",
       "\n",
       "        new_deaths_per_million  new_deaths_smoothed_per_million  \\\n",
       "count                 56401.00                         55587.00   \n",
       "unique                     NaN                              NaN   \n",
       "top                        NaN                              NaN   \n",
       "freq                       NaN                              NaN   \n",
       "mean                      0.68                             0.67   \n",
       "std                       3.03                             1.97   \n",
       "min                     -67.90                            -9.68   \n",
       "25%                       0.00                             0.00   \n",
       "50%                       0.00                             0.03   \n",
       "75%                       0.29                             0.42   \n",
       "max                     215.38                            63.14   \n",
       "\n",
       "        reproduction_rate  icu_patients  icu_patients_per_million  \\\n",
       "count            37696.00       4490.00                   4490.00   \n",
       "unique                NaN           NaN                       NaN   \n",
       "top                   NaN           NaN                       NaN   \n",
       "freq                  NaN           NaN                       NaN   \n",
       "mean                 1.04        726.19                     13.26   \n",
       "std                  0.40       2031.11                     18.79   \n",
       "min                  0.00          0.00                      0.00   \n",
       "25%                  0.87          9.00                      1.68   \n",
       "50%                  1.04         48.00                      5.90   \n",
       "75%                  1.22        293.00                     17.46   \n",
       "max                  6.72      15130.00                    126.84   \n",
       "\n",
       "        hosp_patients  hosp_patients_per_million  weekly_icu_admissions  \\\n",
       "count         5005.00                    5005.00                 357.00   \n",
       "unique            NaN                        NaN                    NaN   \n",
       "top               NaN                        NaN                    NaN   \n",
       "freq              NaN                        NaN                    NaN   \n",
       "mean          3867.25                      76.56                 249.26   \n",
       "std           9952.99                     109.08                 545.01   \n",
       "min              0.00                       0.00                   0.00   \n",
       "25%             38.00                      10.55                   4.03   \n",
       "50%            213.00                      35.55                  25.78   \n",
       "75%           1617.00                      93.39                 233.09   \n",
       "max          65368.00                     773.46                4375.41   \n",
       "\n",
       "        weekly_icu_admissions_per_million  weekly_hosp_admissions  \\\n",
       "count                              357.00                  645.00   \n",
       "unique                                NaN                     NaN   \n",
       "top                                   NaN                     NaN   \n",
       "freq                                  NaN                     NaN   \n",
       "mean                                 7.28                 2230.69   \n",
       "std                                 18.18                 5305.47   \n",
       "min                                  0.00                    0.00   \n",
       "25%                                  0.82                   20.14   \n",
       "50%                                  2.08                  146.81   \n",
       "75%                                  6.08                 1077.10   \n",
       "max                                192.21                46641.41   \n",
       "\n",
       "        weekly_hosp_admissions_per_million   total_tests   new_tests  \\\n",
       "count                               645.00  2.201700e+04    21787.00   \n",
       "unique                                 NaN           NaN         NaN   \n",
       "top                                    NaN           NaN         NaN   \n",
       "freq                                   NaN           NaN         NaN   \n",
       "mean                                 60.66  2.309838e+06    28478.32   \n",
       "std                                 174.85  1.053218e+07   114909.37   \n",
       "min                                   0.00  1.000000e+00    -3743.00   \n",
       "25%                                   4.17  6.082500e+04     1039.00   \n",
       "50%                                  15.00  2.656400e+05     3715.00   \n",
       "75%                                  45.03  1.078539e+06    14107.00   \n",
       "max                                2424.48  1.660391e+08  1531394.00   \n",
       "\n",
       "        total_tests_per_thousand  new_tests_per_thousand  new_tests_smoothed  \\\n",
       "count                   22017.00                21787.00            24612.00   \n",
       "unique                       NaN                     NaN                 NaN   \n",
       "top                          NaN                     NaN                 NaN   \n",
       "freq                         NaN                     NaN                 NaN   \n",
       "mean                       78.92                    0.92            27389.71   \n",
       "std                       157.73                    1.70           105980.94   \n",
       "min                         0.00                   -0.40                0.00   \n",
       "25%                         4.05                    0.07             1108.75   \n",
       "50%                        20.96                    0.34             4024.00   \n",
       "75%                        85.92                    1.07            15134.25   \n",
       "max                      1926.64                   26.07          1296553.00   \n",
       "\n",
       "        new_tests_smoothed_per_thousand  tests_per_case  positive_rate  \\\n",
       "count                          24612.00        22802.00       23211.00   \n",
       "unique                              NaN             NaN            NaN   \n",
       "top                                 NaN             NaN            NaN   \n",
       "freq                                NaN             NaN            NaN   \n",
       "mean                               0.90          182.92           0.07   \n",
       "std                                1.57          877.85           0.09   \n",
       "min                                0.00            1.54           0.00   \n",
       "25%                                0.07           10.61           0.01   \n",
       "50%                                0.35           29.37           0.03   \n",
       "75%                                1.08           94.79           0.09   \n",
       "max                               19.17        45864.00           0.65   \n",
       "\n",
       "        stringency_index    population  population_density  median_age  \\\n",
       "count           47847.00  5.707100e+04            54371.00    51034.00   \n",
       "unique               NaN           NaN                 NaN         NaN   \n",
       "top                  NaN           NaN                 NaN         NaN   \n",
       "freq                 NaN           NaN                 NaN         NaN   \n",
       "mean               56.98  8.559938e+07              360.49       31.19   \n",
       "std                25.85  6.017270e+08             1639.74        9.04   \n",
       "min                 0.00  8.090000e+02                0.14       15.10   \n",
       "25%                39.81  1.326539e+06               37.73       23.20   \n",
       "50%                60.65  8.278737e+06               88.12       31.10   \n",
       "75%                77.78  2.982597e+07              214.24       39.70   \n",
       "max               100.00  7.794799e+09            19347.50       48.20   \n",
       "\n",
       "        aged_65_older  aged_70_older  gdp_per_capita  extreme_poverty  \\\n",
       "count        50265.00       50768.00        50367.00         33571.00   \n",
       "unique            NaN            NaN             NaN              NaN   \n",
       "top               NaN            NaN             NaN              NaN   \n",
       "freq              NaN            NaN             NaN              NaN   \n",
       "mean             9.18           5.80        20620.17            12.44   \n",
       "std              6.30           4.30        20311.00            19.43   \n",
       "min              1.14           0.53          661.24             0.10   \n",
       "25%              3.55           2.08         5321.44             0.50   \n",
       "50%              6.93           4.39        13913.84             2.00   \n",
       "75%             14.74           9.40        31400.84            18.10   \n",
       "max             27.05          18.49       116935.60            77.60   \n",
       "\n",
       "        cardiovasc_death_rate  diabetes_prevalence  female_smokers  \\\n",
       "count                51013.00             52881.00        39669.00   \n",
       "unique                    NaN                  NaN             NaN   \n",
       "top                       NaN                  NaN             NaN   \n",
       "freq                      NaN                  NaN             NaN   \n",
       "mean                   252.65                 8.07           10.74   \n",
       "std                    117.52                 4.19           10.47   \n",
       "min                     79.37                 0.99            0.10   \n",
       "25%                    156.14                 5.31            1.90   \n",
       "50%                    238.34                 7.11            6.40   \n",
       "75%                    318.99                10.39           19.60   \n",
       "max                    724.42                30.53           44.00   \n",
       "\n",
       "        male_smokers  handwashing_facilities  hospital_beds_per_thousand  \\\n",
       "count       39156.00                24176.00                    45936.00   \n",
       "unique           NaN                     NaN                         NaN   \n",
       "top              NaN                     NaN                         NaN   \n",
       "freq             NaN                     NaN                         NaN   \n",
       "mean           32.64                   52.09                        3.09   \n",
       "std            13.45                   31.65                        2.51   \n",
       "min             7.70                    1.19                        0.10   \n",
       "25%            21.40                   21.22                        1.30   \n",
       "50%            31.40                   52.23                        2.50   \n",
       "75%            40.90                   83.74                        4.20   \n",
       "max            78.10                   99.00                       13.80   \n",
       "\n",
       "        life_expectancy  human_development_index  \n",
       "count          56336.00                 49247.00  \n",
       "unique              NaN                      NaN  \n",
       "top                 NaN                      NaN  \n",
       "freq                NaN                      NaN  \n",
       "mean              73.94                     0.72  \n",
       "std                7.40                     0.15  \n",
       "min               53.28                     0.35  \n",
       "25%               69.87                     0.60  \n",
       "50%               75.34                     0.75  \n",
       "75%               79.38                     0.85  \n",
       "max               86.75                     0.95  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe(include=\"all\").round(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7bcb2c16-00ae-43fa-b93d-55411166808b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>new_cases</th>\n",
       "      <th>new_cases_smoothed</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>new_deaths</th>\n",
       "      <th>new_deaths_smoothed</th>\n",
       "      <th>total_cases_per_million</th>\n",
       "      <th>new_cases_per_million</th>\n",
       "      <th>new_cases_smoothed_per_million</th>\n",
       "      <th>total_deaths_per_million</th>\n",
       "      <th>new_deaths_per_million</th>\n",
       "      <th>new_deaths_smoothed_per_million</th>\n",
       "      <th>reproduction_rate</th>\n",
       "      <th>icu_patients</th>\n",
       "      <th>icu_patients_per_million</th>\n",
       "      <th>hosp_patients</th>\n",
       "      <th>hosp_patients_per_million</th>\n",
       "      <th>weekly_icu_admissions</th>\n",
       "      <th>weekly_icu_admissions_per_million</th>\n",
       "      <th>weekly_hosp_admissions</th>\n",
       "      <th>weekly_hosp_admissions_per_million</th>\n",
       "      <th>total_tests</th>\n",
       "      <th>new_tests</th>\n",
       "      <th>total_tests_per_thousand</th>\n",
       "      <th>new_tests_per_thousand</th>\n",
       "      <th>new_tests_smoothed</th>\n",
       "      <th>new_tests_smoothed_per_thousand</th>\n",
       "      <th>tests_per_case</th>\n",
       "      <th>positive_rate</th>\n",
       "      <th>stringency_index</th>\n",
       "      <th>population</th>\n",
       "      <th>population_density</th>\n",
       "      <th>median_age</th>\n",
       "      <th>aged_65_older</th>\n",
       "      <th>aged_70_older</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>extreme_poverty</th>\n",
       "      <th>cardiovasc_death_rate</th>\n",
       "      <th>diabetes_prevalence</th>\n",
       "      <th>female_smokers</th>\n",
       "      <th>male_smokers</th>\n",
       "      <th>handwashing_facilities</th>\n",
       "      <th>hospital_beds_per_thousand</th>\n",
       "      <th>life_expectancy</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>57071</td>\n",
       "      <td>56748</td>\n",
       "      <td>57394</td>\n",
       "      <td>57394</td>\n",
       "      <td>53758.0</td>\n",
       "      <td>56465.0</td>\n",
       "      <td>55652.0</td>\n",
       "      <td>44368.0</td>\n",
       "      <td>56465.0</td>\n",
       "      <td>55652.0</td>\n",
       "      <td>53471.0</td>\n",
       "      <td>56401.0</td>\n",
       "      <td>55587.0</td>\n",
       "      <td>44096.0</td>\n",
       "      <td>56401.0</td>\n",
       "      <td>55587.0</td>\n",
       "      <td>37696.0</td>\n",
       "      <td>4490.0</td>\n",
       "      <td>4490.0</td>\n",
       "      <td>5005.0</td>\n",
       "      <td>5005.0</td>\n",
       "      <td>357.0</td>\n",
       "      <td>357.0</td>\n",
       "      <td>645.0</td>\n",
       "      <td>645.0</td>\n",
       "      <td>22017.0</td>\n",
       "      <td>21787.0</td>\n",
       "      <td>22017.0</td>\n",
       "      <td>21787.0</td>\n",
       "      <td>24612.0</td>\n",
       "      <td>24612.0</td>\n",
       "      <td>22802.0</td>\n",
       "      <td>23211.0</td>\n",
       "      <td>47847.0</td>\n",
       "      <td>5.707100e+04</td>\n",
       "      <td>54371.0</td>\n",
       "      <td>51034.0</td>\n",
       "      <td>50265.0</td>\n",
       "      <td>50768.0</td>\n",
       "      <td>50367.0</td>\n",
       "      <td>33571.0</td>\n",
       "      <td>51013.0</td>\n",
       "      <td>52881.0</td>\n",
       "      <td>39669.0</td>\n",
       "      <td>39156.0</td>\n",
       "      <td>24176.0</td>\n",
       "      <td>45936.0</td>\n",
       "      <td>56336.0</td>\n",
       "      <td>49247.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>215</td>\n",
       "      <td>6</td>\n",
       "      <td>216</td>\n",
       "      <td>323</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>30/10/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>323</td>\n",
       "      <td>14828</td>\n",
       "      <td>323</td>\n",
       "      <td>215</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>167797.0</td>\n",
       "      <td>1954.0</td>\n",
       "      <td>1920.0</td>\n",
       "      <td>6859.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>3139.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>726.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>3867.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>249.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2231.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>2309838.0</td>\n",
       "      <td>28478.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27390.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>183.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>8.559938e+07</td>\n",
       "      <td>360.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>20620.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>253.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1693038.0</td>\n",
       "      <td>18270.0</td>\n",
       "      <td>17777.0</td>\n",
       "      <td>55781.0</td>\n",
       "      <td>391.0</td>\n",
       "      <td>378.0</td>\n",
       "      <td>6183.0</td>\n",
       "      <td>134.0</td>\n",
       "      <td>102.0</td>\n",
       "      <td>181.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2031.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>9953.0</td>\n",
       "      <td>109.0</td>\n",
       "      <td>545.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>5305.0</td>\n",
       "      <td>175.0</td>\n",
       "      <td>10532177.0</td>\n",
       "      <td>114909.0</td>\n",
       "      <td>158.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>105981.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>878.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>6.017270e+08</td>\n",
       "      <td>1640.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>20311.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>118.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>-8261.0</td>\n",
       "      <td>-552.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>-1918.0</td>\n",
       "      <td>-232.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-2213.0</td>\n",
       "      <td>-270.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-68.0</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>-3743.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.090000e+02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>661.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>180.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>60825.0</td>\n",
       "      <td>1039.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1109.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>1.326539e+06</td>\n",
       "      <td>38.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5321.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2070.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>594.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>213.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>147.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>265640.0</td>\n",
       "      <td>3715.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4024.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>8.278737e+06</td>\n",
       "      <td>88.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>13914.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>238.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22357.0</td>\n",
       "      <td>235.0</td>\n",
       "      <td>245.0</td>\n",
       "      <td>727.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3487.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>91.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>293.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>1617.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>233.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1077.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>1078539.0</td>\n",
       "      <td>14107.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15134.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>2.982597e+07</td>\n",
       "      <td>214.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>31401.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>319.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>55154651.0</td>\n",
       "      <td>646281.0</td>\n",
       "      <td>584982.0</td>\n",
       "      <td>1328537.0</td>\n",
       "      <td>10600.0</td>\n",
       "      <td>9028.0</td>\n",
       "      <td>76542.0</td>\n",
       "      <td>8653.0</td>\n",
       "      <td>2472.0</td>\n",
       "      <td>1248.0</td>\n",
       "      <td>215.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>15130.0</td>\n",
       "      <td>127.0</td>\n",
       "      <td>65368.0</td>\n",
       "      <td>773.0</td>\n",
       "      <td>4375.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>46641.0</td>\n",
       "      <td>2424.0</td>\n",
       "      <td>166039068.0</td>\n",
       "      <td>1531394.0</td>\n",
       "      <td>1927.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1296553.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>45864.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>7.794799e+09</td>\n",
       "      <td>19348.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>116936.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>724.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       iso_code continent     location      date  total_cases  new_cases  \\\n",
       "count     57071     56748        57394     57394      53758.0    56465.0   \n",
       "unique      215         6          216       323          NaN        NaN   \n",
       "top         AFG    Europe  Afghanistan  30/10/20          NaN        NaN   \n",
       "freq        323     14828          323       215          NaN        NaN   \n",
       "mean        NaN       NaN          NaN       NaN     167797.0     1954.0   \n",
       "std         NaN       NaN          NaN       NaN    1693038.0    18270.0   \n",
       "min         NaN       NaN          NaN       NaN          1.0    -8261.0   \n",
       "25%         NaN       NaN          NaN       NaN        180.0        0.0   \n",
       "50%         NaN       NaN          NaN       NaN       2070.0       14.0   \n",
       "75%         NaN       NaN          NaN       NaN      22357.0      235.0   \n",
       "max         NaN       NaN          NaN       NaN   55154651.0   646281.0   \n",
       "\n",
       "        new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  \\\n",
       "count              55652.0       44368.0     56465.0              55652.0   \n",
       "unique                 NaN           NaN         NaN                  NaN   \n",
       "top                    NaN           NaN         NaN                  NaN   \n",
       "freq                   NaN           NaN         NaN                  NaN   \n",
       "mean                1920.0        6859.0        47.0                 47.0   \n",
       "std                17777.0       55781.0       391.0                378.0   \n",
       "min                 -552.0           1.0     -1918.0               -232.0   \n",
       "25%                    1.0          13.0         0.0                  0.0   \n",
       "50%                   19.0          84.0         0.0                  0.0   \n",
       "75%                  245.0         727.0         4.0                  4.0   \n",
       "max               584982.0     1328537.0     10600.0               9028.0   \n",
       "\n",
       "        total_cases_per_million  new_cases_per_million  \\\n",
       "count                   53471.0                56401.0   \n",
       "unique                      NaN                    NaN   \n",
       "top                         NaN                    NaN   \n",
       "freq                        NaN                    NaN   \n",
       "mean                     3139.0                   39.0   \n",
       "std                      6183.0                  134.0   \n",
       "min                         0.0                -2213.0   \n",
       "25%                        90.0                    0.0   \n",
       "50%                       594.0                    2.0   \n",
       "75%                      3487.0                   26.0   \n",
       "max                     76542.0                 8653.0   \n",
       "\n",
       "        new_cases_smoothed_per_million  total_deaths_per_million  \\\n",
       "count                          55587.0                   44096.0   \n",
       "unique                             NaN                       NaN   \n",
       "top                                NaN                       NaN   \n",
       "freq                               NaN                       NaN   \n",
       "mean                              38.0                      95.0   \n",
       "std                              102.0                     181.0   \n",
       "min                             -270.0                       0.0   \n",
       "25%                                0.0                       4.0   \n",
       "50%                                4.0                      20.0   \n",
       "75%                               30.0                      91.0   \n",
       "max                             2472.0                    1248.0   \n",
       "\n",
       "        new_deaths_per_million  new_deaths_smoothed_per_million  \\\n",
       "count                  56401.0                          55587.0   \n",
       "unique                     NaN                              NaN   \n",
       "top                        NaN                              NaN   \n",
       "freq                       NaN                              NaN   \n",
       "mean                       1.0                              1.0   \n",
       "std                        3.0                              2.0   \n",
       "min                      -68.0                            -10.0   \n",
       "25%                        0.0                              0.0   \n",
       "50%                        0.0                              0.0   \n",
       "75%                        0.0                              0.0   \n",
       "max                      215.0                             63.0   \n",
       "\n",
       "        reproduction_rate  icu_patients  icu_patients_per_million  \\\n",
       "count             37696.0        4490.0                    4490.0   \n",
       "unique                NaN           NaN                       NaN   \n",
       "top                   NaN           NaN                       NaN   \n",
       "freq                  NaN           NaN                       NaN   \n",
       "mean                  1.0         726.0                      13.0   \n",
       "std                   0.0        2031.0                      19.0   \n",
       "min                   0.0           0.0                       0.0   \n",
       "25%                   1.0           9.0                       2.0   \n",
       "50%                   1.0          48.0                       6.0   \n",
       "75%                   1.0         293.0                      17.0   \n",
       "max                   7.0       15130.0                     127.0   \n",
       "\n",
       "        hosp_patients  hosp_patients_per_million  weekly_icu_admissions  \\\n",
       "count          5005.0                     5005.0                  357.0   \n",
       "unique            NaN                        NaN                    NaN   \n",
       "top               NaN                        NaN                    NaN   \n",
       "freq              NaN                        NaN                    NaN   \n",
       "mean           3867.0                       77.0                  249.0   \n",
       "std            9953.0                      109.0                  545.0   \n",
       "min               0.0                        0.0                    0.0   \n",
       "25%              38.0                       11.0                    4.0   \n",
       "50%             213.0                       36.0                   26.0   \n",
       "75%            1617.0                       93.0                  233.0   \n",
       "max           65368.0                      773.0                 4375.0   \n",
       "\n",
       "        weekly_icu_admissions_per_million  weekly_hosp_admissions  \\\n",
       "count                               357.0                   645.0   \n",
       "unique                                NaN                     NaN   \n",
       "top                                   NaN                     NaN   \n",
       "freq                                  NaN                     NaN   \n",
       "mean                                  7.0                  2231.0   \n",
       "std                                  18.0                  5305.0   \n",
       "min                                   0.0                     0.0   \n",
       "25%                                   1.0                    20.0   \n",
       "50%                                   2.0                   147.0   \n",
       "75%                                   6.0                  1077.0   \n",
       "max                                 192.0                 46641.0   \n",
       "\n",
       "        weekly_hosp_admissions_per_million  total_tests  new_tests  \\\n",
       "count                                645.0      22017.0    21787.0   \n",
       "unique                                 NaN          NaN        NaN   \n",
       "top                                    NaN          NaN        NaN   \n",
       "freq                                   NaN          NaN        NaN   \n",
       "mean                                  61.0    2309838.0    28478.0   \n",
       "std                                  175.0   10532177.0   114909.0   \n",
       "min                                    0.0          1.0    -3743.0   \n",
       "25%                                    4.0      60825.0     1039.0   \n",
       "50%                                   15.0     265640.0     3715.0   \n",
       "75%                                   45.0    1078539.0    14107.0   \n",
       "max                                 2424.0  166039068.0  1531394.0   \n",
       "\n",
       "        total_tests_per_thousand  new_tests_per_thousand  new_tests_smoothed  \\\n",
       "count                    22017.0                 21787.0             24612.0   \n",
       "unique                       NaN                     NaN                 NaN   \n",
       "top                          NaN                     NaN                 NaN   \n",
       "freq                         NaN                     NaN                 NaN   \n",
       "mean                        79.0                     1.0             27390.0   \n",
       "std                        158.0                     2.0            105981.0   \n",
       "min                          0.0                    -0.0                 0.0   \n",
       "25%                          4.0                     0.0              1109.0   \n",
       "50%                         21.0                     0.0              4024.0   \n",
       "75%                         86.0                     1.0             15134.0   \n",
       "max                       1927.0                    26.0           1296553.0   \n",
       "\n",
       "        new_tests_smoothed_per_thousand  tests_per_case  positive_rate  \\\n",
       "count                           24612.0         22802.0        23211.0   \n",
       "unique                              NaN             NaN            NaN   \n",
       "top                                 NaN             NaN            NaN   \n",
       "freq                                NaN             NaN            NaN   \n",
       "mean                                1.0           183.0            0.0   \n",
       "std                                 2.0           878.0            0.0   \n",
       "min                                 0.0             2.0            0.0   \n",
       "25%                                 0.0            11.0            0.0   \n",
       "50%                                 0.0            29.0            0.0   \n",
       "75%                                 1.0            95.0            0.0   \n",
       "max                                19.0         45864.0            1.0   \n",
       "\n",
       "        stringency_index    population  population_density  median_age  \\\n",
       "count            47847.0  5.707100e+04             54371.0     51034.0   \n",
       "unique               NaN           NaN                 NaN         NaN   \n",
       "top                  NaN           NaN                 NaN         NaN   \n",
       "freq                 NaN           NaN                 NaN         NaN   \n",
       "mean                57.0  8.559938e+07               360.0        31.0   \n",
       "std                 26.0  6.017270e+08              1640.0         9.0   \n",
       "min                  0.0  8.090000e+02                 0.0        15.0   \n",
       "25%                 40.0  1.326539e+06                38.0        23.0   \n",
       "50%                 61.0  8.278737e+06                88.0        31.0   \n",
       "75%                 78.0  2.982597e+07               214.0        40.0   \n",
       "max                100.0  7.794799e+09             19348.0        48.0   \n",
       "\n",
       "        aged_65_older  aged_70_older  gdp_per_capita  extreme_poverty  \\\n",
       "count         50265.0        50768.0         50367.0          33571.0   \n",
       "unique            NaN            NaN             NaN              NaN   \n",
       "top               NaN            NaN             NaN              NaN   \n",
       "freq              NaN            NaN             NaN              NaN   \n",
       "mean              9.0            6.0         20620.0             12.0   \n",
       "std               6.0            4.0         20311.0             19.0   \n",
       "min               1.0            1.0           661.0              0.0   \n",
       "25%               4.0            2.0          5321.0              0.0   \n",
       "50%               7.0            4.0         13914.0              2.0   \n",
       "75%              15.0            9.0         31401.0             18.0   \n",
       "max              27.0           18.0        116936.0             78.0   \n",
       "\n",
       "        cardiovasc_death_rate  diabetes_prevalence  female_smokers  \\\n",
       "count                 51013.0              52881.0         39669.0   \n",
       "unique                    NaN                  NaN             NaN   \n",
       "top                       NaN                  NaN             NaN   \n",
       "freq                      NaN                  NaN             NaN   \n",
       "mean                    253.0                  8.0            11.0   \n",
       "std                     118.0                  4.0            10.0   \n",
       "min                      79.0                  1.0             0.0   \n",
       "25%                     156.0                  5.0             2.0   \n",
       "50%                     238.0                  7.0             6.0   \n",
       "75%                     319.0                 10.0            20.0   \n",
       "max                     724.0                 31.0            44.0   \n",
       "\n",
       "        male_smokers  handwashing_facilities  hospital_beds_per_thousand  \\\n",
       "count        39156.0                 24176.0                     45936.0   \n",
       "unique           NaN                     NaN                         NaN   \n",
       "top              NaN                     NaN                         NaN   \n",
       "freq             NaN                     NaN                         NaN   \n",
       "mean            33.0                    52.0                         3.0   \n",
       "std             13.0                    32.0                         3.0   \n",
       "min              8.0                     1.0                         0.0   \n",
       "25%             21.0                    21.0                         1.0   \n",
       "50%             31.0                    52.0                         2.0   \n",
       "75%             41.0                    84.0                         4.0   \n",
       "max             78.0                    99.0                        14.0   \n",
       "\n",
       "        life_expectancy  human_development_index  \n",
       "count           56336.0                  49247.0  \n",
       "unique              NaN                      NaN  \n",
       "top                 NaN                      NaN  \n",
       "freq                NaN                      NaN  \n",
       "mean               74.0                      1.0  \n",
       "std                 7.0                      0.0  \n",
       "min                53.0                      0.0  \n",
       "25%                70.0                      1.0  \n",
       "50%                75.0                      1.0  \n",
       "75%                79.0                      1.0  \n",
       "max                87.0                      1.0  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe(include=\"all\").round()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0fe6dead-df43-421a-8f7b-8e8255f788cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>new_cases</th>\n",
       "      <th>new_cases_smoothed</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>new_deaths</th>\n",
       "      <th>new_deaths_smoothed</th>\n",
       "      <th>total_cases_per_million</th>\n",
       "      <th>new_cases_per_million</th>\n",
       "      <th>new_cases_smoothed_per_million</th>\n",
       "      <th>total_deaths_per_million</th>\n",
       "      <th>new_deaths_per_million</th>\n",
       "      <th>new_deaths_smoothed_per_million</th>\n",
       "      <th>reproduction_rate</th>\n",
       "      <th>icu_patients</th>\n",
       "      <th>icu_patients_per_million</th>\n",
       "      <th>hosp_patients</th>\n",
       "      <th>hosp_patients_per_million</th>\n",
       "      <th>weekly_icu_admissions</th>\n",
       "      <th>weekly_icu_admissions_per_million</th>\n",
       "      <th>weekly_hosp_admissions</th>\n",
       "      <th>weekly_hosp_admissions_per_million</th>\n",
       "      <th>total_tests</th>\n",
       "      <th>new_tests</th>\n",
       "      <th>total_tests_per_thousand</th>\n",
       "      <th>new_tests_per_thousand</th>\n",
       "      <th>new_tests_smoothed</th>\n",
       "      <th>new_tests_smoothed_per_thousand</th>\n",
       "      <th>tests_per_case</th>\n",
       "      <th>positive_rate</th>\n",
       "      <th>stringency_index</th>\n",
       "      <th>population</th>\n",
       "      <th>population_density</th>\n",
       "      <th>median_age</th>\n",
       "      <th>aged_65_older</th>\n",
       "      <th>aged_70_older</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>extreme_poverty</th>\n",
       "      <th>cardiovasc_death_rate</th>\n",
       "      <th>diabetes_prevalence</th>\n",
       "      <th>female_smokers</th>\n",
       "      <th>male_smokers</th>\n",
       "      <th>handwashing_facilities</th>\n",
       "      <th>hospital_beds_per_thousand</th>\n",
       "      <th>life_expectancy</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>57071</td>\n",
       "      <td>56748</td>\n",
       "      <td>57394</td>\n",
       "      <td>57394</td>\n",
       "      <td>53758.00</td>\n",
       "      <td>56465.00</td>\n",
       "      <td>55652.00</td>\n",
       "      <td>44368.00</td>\n",
       "      <td>56465.00</td>\n",
       "      <td>55652.00</td>\n",
       "      <td>53471.00</td>\n",
       "      <td>56401.00</td>\n",
       "      <td>55587.00</td>\n",
       "      <td>44096.00</td>\n",
       "      <td>56401.00</td>\n",
       "      <td>55587.00</td>\n",
       "      <td>37696.00</td>\n",
       "      <td>4490.00</td>\n",
       "      <td>4490.00</td>\n",
       "      <td>5005.00</td>\n",
       "      <td>5005.00</td>\n",
       "      <td>357.00</td>\n",
       "      <td>357.00</td>\n",
       "      <td>645.00</td>\n",
       "      <td>645.00</td>\n",
       "      <td>2.201700e+04</td>\n",
       "      <td>21787.00</td>\n",
       "      <td>22017.00</td>\n",
       "      <td>21787.00</td>\n",
       "      <td>24612.00</td>\n",
       "      <td>24612.00</td>\n",
       "      <td>22802.00</td>\n",
       "      <td>23211.00</td>\n",
       "      <td>47847.00</td>\n",
       "      <td>5.707100e+04</td>\n",
       "      <td>54371.00</td>\n",
       "      <td>51034.00</td>\n",
       "      <td>50265.00</td>\n",
       "      <td>50768.00</td>\n",
       "      <td>50367.00</td>\n",
       "      <td>33571.00</td>\n",
       "      <td>51013.00</td>\n",
       "      <td>52881.00</td>\n",
       "      <td>39669.00</td>\n",
       "      <td>39156.00</td>\n",
       "      <td>24176.00</td>\n",
       "      <td>45936.00</td>\n",
       "      <td>56336.00</td>\n",
       "      <td>49247.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>215</td>\n",
       "      <td>6</td>\n",
       "      <td>216</td>\n",
       "      <td>323</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>30/10/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>323</td>\n",
       "      <td>14828</td>\n",
       "      <td>323</td>\n",
       "      <td>215</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>167797.37</td>\n",
       "      <td>1953.58</td>\n",
       "      <td>1920.43</td>\n",
       "      <td>6858.64</td>\n",
       "      <td>47.05</td>\n",
       "      <td>46.84</td>\n",
       "      <td>3139.10</td>\n",
       "      <td>39.34</td>\n",
       "      <td>38.40</td>\n",
       "      <td>95.34</td>\n",
       "      <td>0.68</td>\n",
       "      <td>0.67</td>\n",
       "      <td>1.04</td>\n",
       "      <td>726.19</td>\n",
       "      <td>13.26</td>\n",
       "      <td>3867.25</td>\n",
       "      <td>76.56</td>\n",
       "      <td>249.26</td>\n",
       "      <td>7.28</td>\n",
       "      <td>2230.69</td>\n",
       "      <td>60.66</td>\n",
       "      <td>2.309838e+06</td>\n",
       "      <td>28478.32</td>\n",
       "      <td>78.92</td>\n",
       "      <td>0.92</td>\n",
       "      <td>27389.71</td>\n",
       "      <td>0.90</td>\n",
       "      <td>182.92</td>\n",
       "      <td>0.07</td>\n",
       "      <td>56.98</td>\n",
       "      <td>8.559938e+07</td>\n",
       "      <td>360.49</td>\n",
       "      <td>31.19</td>\n",
       "      <td>9.18</td>\n",
       "      <td>5.80</td>\n",
       "      <td>20620.17</td>\n",
       "      <td>12.44</td>\n",
       "      <td>252.65</td>\n",
       "      <td>8.07</td>\n",
       "      <td>10.74</td>\n",
       "      <td>32.64</td>\n",
       "      <td>52.09</td>\n",
       "      <td>3.09</td>\n",
       "      <td>73.94</td>\n",
       "      <td>0.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1693037.55</td>\n",
       "      <td>18269.65</td>\n",
       "      <td>17777.39</td>\n",
       "      <td>55780.81</td>\n",
       "      <td>390.85</td>\n",
       "      <td>378.27</td>\n",
       "      <td>6183.46</td>\n",
       "      <td>133.99</td>\n",
       "      <td>101.65</td>\n",
       "      <td>180.72</td>\n",
       "      <td>3.03</td>\n",
       "      <td>1.97</td>\n",
       "      <td>0.40</td>\n",
       "      <td>2031.11</td>\n",
       "      <td>18.79</td>\n",
       "      <td>9952.99</td>\n",
       "      <td>109.08</td>\n",
       "      <td>545.01</td>\n",
       "      <td>18.18</td>\n",
       "      <td>5305.47</td>\n",
       "      <td>174.85</td>\n",
       "      <td>1.053218e+07</td>\n",
       "      <td>114909.37</td>\n",
       "      <td>157.73</td>\n",
       "      <td>1.70</td>\n",
       "      <td>105980.94</td>\n",
       "      <td>1.57</td>\n",
       "      <td>877.85</td>\n",
       "      <td>0.09</td>\n",
       "      <td>25.85</td>\n",
       "      <td>6.017270e+08</td>\n",
       "      <td>1639.74</td>\n",
       "      <td>9.04</td>\n",
       "      <td>6.30</td>\n",
       "      <td>4.30</td>\n",
       "      <td>20311.00</td>\n",
       "      <td>19.43</td>\n",
       "      <td>117.52</td>\n",
       "      <td>4.19</td>\n",
       "      <td>10.47</td>\n",
       "      <td>13.45</td>\n",
       "      <td>31.65</td>\n",
       "      <td>2.51</td>\n",
       "      <td>7.40</td>\n",
       "      <td>0.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.00</td>\n",
       "      <td>-8261.00</td>\n",
       "      <td>-552.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>-1918.00</td>\n",
       "      <td>-232.14</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-2212.54</td>\n",
       "      <td>-269.98</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-67.90</td>\n",
       "      <td>-9.68</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-3743.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-0.40</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.54</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8.090000e+02</td>\n",
       "      <td>0.14</td>\n",
       "      <td>15.10</td>\n",
       "      <td>1.14</td>\n",
       "      <td>0.53</td>\n",
       "      <td>661.24</td>\n",
       "      <td>0.10</td>\n",
       "      <td>79.37</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.10</td>\n",
       "      <td>7.70</td>\n",
       "      <td>1.19</td>\n",
       "      <td>0.10</td>\n",
       "      <td>53.28</td>\n",
       "      <td>0.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>180.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.86</td>\n",
       "      <td>13.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>90.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.26</td>\n",
       "      <td>3.98</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.87</td>\n",
       "      <td>9.00</td>\n",
       "      <td>1.68</td>\n",
       "      <td>38.00</td>\n",
       "      <td>10.55</td>\n",
       "      <td>4.03</td>\n",
       "      <td>0.82</td>\n",
       "      <td>20.14</td>\n",
       "      <td>4.17</td>\n",
       "      <td>6.082500e+04</td>\n",
       "      <td>1039.00</td>\n",
       "      <td>4.05</td>\n",
       "      <td>0.07</td>\n",
       "      <td>1108.75</td>\n",
       "      <td>0.07</td>\n",
       "      <td>10.61</td>\n",
       "      <td>0.01</td>\n",
       "      <td>39.81</td>\n",
       "      <td>1.326539e+06</td>\n",
       "      <td>37.73</td>\n",
       "      <td>23.20</td>\n",
       "      <td>3.55</td>\n",
       "      <td>2.08</td>\n",
       "      <td>5321.44</td>\n",
       "      <td>0.50</td>\n",
       "      <td>156.14</td>\n",
       "      <td>5.31</td>\n",
       "      <td>1.90</td>\n",
       "      <td>21.40</td>\n",
       "      <td>21.22</td>\n",
       "      <td>1.30</td>\n",
       "      <td>69.87</td>\n",
       "      <td>0.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2070.00</td>\n",
       "      <td>14.00</td>\n",
       "      <td>19.43</td>\n",
       "      <td>84.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.29</td>\n",
       "      <td>593.66</td>\n",
       "      <td>2.19</td>\n",
       "      <td>3.86</td>\n",
       "      <td>20.38</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.04</td>\n",
       "      <td>48.00</td>\n",
       "      <td>5.90</td>\n",
       "      <td>213.00</td>\n",
       "      <td>35.55</td>\n",
       "      <td>25.78</td>\n",
       "      <td>2.08</td>\n",
       "      <td>146.81</td>\n",
       "      <td>15.00</td>\n",
       "      <td>2.656400e+05</td>\n",
       "      <td>3715.00</td>\n",
       "      <td>20.96</td>\n",
       "      <td>0.34</td>\n",
       "      <td>4024.00</td>\n",
       "      <td>0.35</td>\n",
       "      <td>29.37</td>\n",
       "      <td>0.03</td>\n",
       "      <td>60.65</td>\n",
       "      <td>8.278737e+06</td>\n",
       "      <td>88.12</td>\n",
       "      <td>31.10</td>\n",
       "      <td>6.93</td>\n",
       "      <td>4.39</td>\n",
       "      <td>13913.84</td>\n",
       "      <td>2.00</td>\n",
       "      <td>238.34</td>\n",
       "      <td>7.11</td>\n",
       "      <td>6.40</td>\n",
       "      <td>31.40</td>\n",
       "      <td>52.23</td>\n",
       "      <td>2.50</td>\n",
       "      <td>75.34</td>\n",
       "      <td>0.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22356.75</td>\n",
       "      <td>235.00</td>\n",
       "      <td>245.29</td>\n",
       "      <td>727.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3487.05</td>\n",
       "      <td>25.94</td>\n",
       "      <td>29.68</td>\n",
       "      <td>90.57</td>\n",
       "      <td>0.29</td>\n",
       "      <td>0.42</td>\n",
       "      <td>1.22</td>\n",
       "      <td>293.00</td>\n",
       "      <td>17.46</td>\n",
       "      <td>1617.00</td>\n",
       "      <td>93.39</td>\n",
       "      <td>233.09</td>\n",
       "      <td>6.08</td>\n",
       "      <td>1077.10</td>\n",
       "      <td>45.03</td>\n",
       "      <td>1.078539e+06</td>\n",
       "      <td>14107.00</td>\n",
       "      <td>85.92</td>\n",
       "      <td>1.07</td>\n",
       "      <td>15134.25</td>\n",
       "      <td>1.08</td>\n",
       "      <td>94.79</td>\n",
       "      <td>0.09</td>\n",
       "      <td>77.78</td>\n",
       "      <td>2.982597e+07</td>\n",
       "      <td>214.24</td>\n",
       "      <td>39.70</td>\n",
       "      <td>14.74</td>\n",
       "      <td>9.40</td>\n",
       "      <td>31400.84</td>\n",
       "      <td>18.10</td>\n",
       "      <td>318.99</td>\n",
       "      <td>10.39</td>\n",
       "      <td>19.60</td>\n",
       "      <td>40.90</td>\n",
       "      <td>83.74</td>\n",
       "      <td>4.20</td>\n",
       "      <td>79.38</td>\n",
       "      <td>0.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>55154651.00</td>\n",
       "      <td>646281.00</td>\n",
       "      <td>584981.86</td>\n",
       "      <td>1328537.00</td>\n",
       "      <td>10600.00</td>\n",
       "      <td>9027.71</td>\n",
       "      <td>76541.77</td>\n",
       "      <td>8652.66</td>\n",
       "      <td>2472.19</td>\n",
       "      <td>1248.01</td>\n",
       "      <td>215.38</td>\n",
       "      <td>63.14</td>\n",
       "      <td>6.72</td>\n",
       "      <td>15130.00</td>\n",
       "      <td>126.84</td>\n",
       "      <td>65368.00</td>\n",
       "      <td>773.46</td>\n",
       "      <td>4375.41</td>\n",
       "      <td>192.21</td>\n",
       "      <td>46641.41</td>\n",
       "      <td>2424.48</td>\n",
       "      <td>1.660391e+08</td>\n",
       "      <td>1531394.00</td>\n",
       "      <td>1926.64</td>\n",
       "      <td>26.07</td>\n",
       "      <td>1296553.00</td>\n",
       "      <td>19.17</td>\n",
       "      <td>45864.00</td>\n",
       "      <td>0.65</td>\n",
       "      <td>100.00</td>\n",
       "      <td>7.794799e+09</td>\n",
       "      <td>19347.50</td>\n",
       "      <td>48.20</td>\n",
       "      <td>27.05</td>\n",
       "      <td>18.49</td>\n",
       "      <td>116935.60</td>\n",
       "      <td>77.60</td>\n",
       "      <td>724.42</td>\n",
       "      <td>30.53</td>\n",
       "      <td>44.00</td>\n",
       "      <td>78.10</td>\n",
       "      <td>99.00</td>\n",
       "      <td>13.80</td>\n",
       "      <td>86.75</td>\n",
       "      <td>0.95</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       iso_code continent     location      date  total_cases  new_cases  \\\n",
       "count     57071     56748        57394     57394     53758.00   56465.00   \n",
       "unique      215         6          216       323          NaN        NaN   \n",
       "top         AFG    Europe  Afghanistan  30/10/20          NaN        NaN   \n",
       "freq        323     14828          323       215          NaN        NaN   \n",
       "mean        NaN       NaN          NaN       NaN    167797.37    1953.58   \n",
       "std         NaN       NaN          NaN       NaN   1693037.55   18269.65   \n",
       "min         NaN       NaN          NaN       NaN         1.00   -8261.00   \n",
       "25%         NaN       NaN          NaN       NaN       180.00       0.00   \n",
       "50%         NaN       NaN          NaN       NaN      2070.00      14.00   \n",
       "75%         NaN       NaN          NaN       NaN     22356.75     235.00   \n",
       "max         NaN       NaN          NaN       NaN  55154651.00  646281.00   \n",
       "\n",
       "        new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  \\\n",
       "count             55652.00      44368.00    56465.00             55652.00   \n",
       "unique                 NaN           NaN         NaN                  NaN   \n",
       "top                    NaN           NaN         NaN                  NaN   \n",
       "freq                   NaN           NaN         NaN                  NaN   \n",
       "mean               1920.43       6858.64       47.05                46.84   \n",
       "std               17777.39      55780.81      390.85               378.27   \n",
       "min                -552.00          1.00    -1918.00              -232.14   \n",
       "25%                   0.86         13.00        0.00                 0.00   \n",
       "50%                  19.43         84.00        0.00                 0.29   \n",
       "75%                 245.29        727.00        4.00                 4.00   \n",
       "max              584981.86    1328537.00    10600.00              9027.71   \n",
       "\n",
       "        total_cases_per_million  new_cases_per_million  \\\n",
       "count                  53471.00               56401.00   \n",
       "unique                      NaN                    NaN   \n",
       "top                         NaN                    NaN   \n",
       "freq                        NaN                    NaN   \n",
       "mean                    3139.10                  39.34   \n",
       "std                     6183.46                 133.99   \n",
       "min                        0.00               -2212.54   \n",
       "25%                       90.03                   0.00   \n",
       "50%                      593.66                   2.19   \n",
       "75%                     3487.05                  25.94   \n",
       "max                    76541.77                8652.66   \n",
       "\n",
       "        new_cases_smoothed_per_million  total_deaths_per_million  \\\n",
       "count                         55587.00                  44096.00   \n",
       "unique                             NaN                       NaN   \n",
       "top                                NaN                       NaN   \n",
       "freq                               NaN                       NaN   \n",
       "mean                             38.40                     95.34   \n",
       "std                             101.65                    180.72   \n",
       "min                            -269.98                      0.00   \n",
       "25%                               0.26                      3.98   \n",
       "50%                               3.86                     20.38   \n",
       "75%                              29.68                     90.57   \n",
       "max                            2472.19                   1248.01   \n",
       "\n",
       "        new_deaths_per_million  new_deaths_smoothed_per_million  \\\n",
       "count                 56401.00                         55587.00   \n",
       "unique                     NaN                              NaN   \n",
       "top                        NaN                              NaN   \n",
       "freq                       NaN                              NaN   \n",
       "mean                      0.68                             0.67   \n",
       "std                       3.03                             1.97   \n",
       "min                     -67.90                            -9.68   \n",
       "25%                       0.00                             0.00   \n",
       "50%                       0.00                             0.03   \n",
       "75%                       0.29                             0.42   \n",
       "max                     215.38                            63.14   \n",
       "\n",
       "        reproduction_rate  icu_patients  icu_patients_per_million  \\\n",
       "count            37696.00       4490.00                   4490.00   \n",
       "unique                NaN           NaN                       NaN   \n",
       "top                   NaN           NaN                       NaN   \n",
       "freq                  NaN           NaN                       NaN   \n",
       "mean                 1.04        726.19                     13.26   \n",
       "std                  0.40       2031.11                     18.79   \n",
       "min                  0.00          0.00                      0.00   \n",
       "25%                  0.87          9.00                      1.68   \n",
       "50%                  1.04         48.00                      5.90   \n",
       "75%                  1.22        293.00                     17.46   \n",
       "max                  6.72      15130.00                    126.84   \n",
       "\n",
       "        hosp_patients  hosp_patients_per_million  weekly_icu_admissions  \\\n",
       "count         5005.00                    5005.00                 357.00   \n",
       "unique            NaN                        NaN                    NaN   \n",
       "top               NaN                        NaN                    NaN   \n",
       "freq              NaN                        NaN                    NaN   \n",
       "mean          3867.25                      76.56                 249.26   \n",
       "std           9952.99                     109.08                 545.01   \n",
       "min              0.00                       0.00                   0.00   \n",
       "25%             38.00                      10.55                   4.03   \n",
       "50%            213.00                      35.55                  25.78   \n",
       "75%           1617.00                      93.39                 233.09   \n",
       "max          65368.00                     773.46                4375.41   \n",
       "\n",
       "        weekly_icu_admissions_per_million  weekly_hosp_admissions  \\\n",
       "count                              357.00                  645.00   \n",
       "unique                                NaN                     NaN   \n",
       "top                                   NaN                     NaN   \n",
       "freq                                  NaN                     NaN   \n",
       "mean                                 7.28                 2230.69   \n",
       "std                                 18.18                 5305.47   \n",
       "min                                  0.00                    0.00   \n",
       "25%                                  0.82                   20.14   \n",
       "50%                                  2.08                  146.81   \n",
       "75%                                  6.08                 1077.10   \n",
       "max                                192.21                46641.41   \n",
       "\n",
       "        weekly_hosp_admissions_per_million   total_tests   new_tests  \\\n",
       "count                               645.00  2.201700e+04    21787.00   \n",
       "unique                                 NaN           NaN         NaN   \n",
       "top                                    NaN           NaN         NaN   \n",
       "freq                                   NaN           NaN         NaN   \n",
       "mean                                 60.66  2.309838e+06    28478.32   \n",
       "std                                 174.85  1.053218e+07   114909.37   \n",
       "min                                   0.00  1.000000e+00    -3743.00   \n",
       "25%                                   4.17  6.082500e+04     1039.00   \n",
       "50%                                  15.00  2.656400e+05     3715.00   \n",
       "75%                                  45.03  1.078539e+06    14107.00   \n",
       "max                                2424.48  1.660391e+08  1531394.00   \n",
       "\n",
       "        total_tests_per_thousand  new_tests_per_thousand  new_tests_smoothed  \\\n",
       "count                   22017.00                21787.00            24612.00   \n",
       "unique                       NaN                     NaN                 NaN   \n",
       "top                          NaN                     NaN                 NaN   \n",
       "freq                         NaN                     NaN                 NaN   \n",
       "mean                       78.92                    0.92            27389.71   \n",
       "std                       157.73                    1.70           105980.94   \n",
       "min                         0.00                   -0.40                0.00   \n",
       "25%                         4.05                    0.07             1108.75   \n",
       "50%                        20.96                    0.34             4024.00   \n",
       "75%                        85.92                    1.07            15134.25   \n",
       "max                      1926.64                   26.07          1296553.00   \n",
       "\n",
       "        new_tests_smoothed_per_thousand  tests_per_case  positive_rate  \\\n",
       "count                          24612.00        22802.00       23211.00   \n",
       "unique                              NaN             NaN            NaN   \n",
       "top                                 NaN             NaN            NaN   \n",
       "freq                                NaN             NaN            NaN   \n",
       "mean                               0.90          182.92           0.07   \n",
       "std                                1.57          877.85           0.09   \n",
       "min                                0.00            1.54           0.00   \n",
       "25%                                0.07           10.61           0.01   \n",
       "50%                                0.35           29.37           0.03   \n",
       "75%                                1.08           94.79           0.09   \n",
       "max                               19.17        45864.00           0.65   \n",
       "\n",
       "        stringency_index    population  population_density  median_age  \\\n",
       "count           47847.00  5.707100e+04            54371.00    51034.00   \n",
       "unique               NaN           NaN                 NaN         NaN   \n",
       "top                  NaN           NaN                 NaN         NaN   \n",
       "freq                 NaN           NaN                 NaN         NaN   \n",
       "mean               56.98  8.559938e+07              360.49       31.19   \n",
       "std                25.85  6.017270e+08             1639.74        9.04   \n",
       "min                 0.00  8.090000e+02                0.14       15.10   \n",
       "25%                39.81  1.326539e+06               37.73       23.20   \n",
       "50%                60.65  8.278737e+06               88.12       31.10   \n",
       "75%                77.78  2.982597e+07              214.24       39.70   \n",
       "max               100.00  7.794799e+09            19347.50       48.20   \n",
       "\n",
       "        aged_65_older  aged_70_older  gdp_per_capita  extreme_poverty  \\\n",
       "count        50265.00       50768.00        50367.00         33571.00   \n",
       "unique            NaN            NaN             NaN              NaN   \n",
       "top               NaN            NaN             NaN              NaN   \n",
       "freq              NaN            NaN             NaN              NaN   \n",
       "mean             9.18           5.80        20620.17            12.44   \n",
       "std              6.30           4.30        20311.00            19.43   \n",
       "min              1.14           0.53          661.24             0.10   \n",
       "25%              3.55           2.08         5321.44             0.50   \n",
       "50%              6.93           4.39        13913.84             2.00   \n",
       "75%             14.74           9.40        31400.84            18.10   \n",
       "max             27.05          18.49       116935.60            77.60   \n",
       "\n",
       "        cardiovasc_death_rate  diabetes_prevalence  female_smokers  \\\n",
       "count                51013.00             52881.00        39669.00   \n",
       "unique                    NaN                  NaN             NaN   \n",
       "top                       NaN                  NaN             NaN   \n",
       "freq                      NaN                  NaN             NaN   \n",
       "mean                   252.65                 8.07           10.74   \n",
       "std                    117.52                 4.19           10.47   \n",
       "min                     79.37                 0.99            0.10   \n",
       "25%                    156.14                 5.31            1.90   \n",
       "50%                    238.34                 7.11            6.40   \n",
       "75%                    318.99                10.39           19.60   \n",
       "max                    724.42                30.53           44.00   \n",
       "\n",
       "        male_smokers  handwashing_facilities  hospital_beds_per_thousand  \\\n",
       "count       39156.00                24176.00                    45936.00   \n",
       "unique           NaN                     NaN                         NaN   \n",
       "top              NaN                     NaN                         NaN   \n",
       "freq             NaN                     NaN                         NaN   \n",
       "mean           32.64                   52.09                        3.09   \n",
       "std            13.45                   31.65                        2.51   \n",
       "min             7.70                    1.19                        0.10   \n",
       "25%            21.40                   21.22                        1.30   \n",
       "50%            31.40                   52.23                        2.50   \n",
       "75%            40.90                   83.74                        4.20   \n",
       "max            78.10                   99.00                       13.80   \n",
       "\n",
       "        life_expectancy  human_development_index  \n",
       "count          56336.00                 49247.00  \n",
       "unique              NaN                      NaN  \n",
       "top                 NaN                      NaN  \n",
       "freq                NaN                      NaN  \n",
       "mean              73.94                     0.72  \n",
       "std                7.40                     0.15  \n",
       "min               53.28                     0.35  \n",
       "25%               69.87                     0.60  \n",
       "50%               75.34                     0.75  \n",
       "75%               79.38                     0.85  \n",
       "max               86.75                     0.95  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.set_option('display.max_columns',None)\n",
    "df.describe(include=\"all\").round(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "2771f755-0252-4908-b6fd-5ca526b648b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "216"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df ['location'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e053cfb6-058c-43da-92d9-1669e3f2bc31",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "continent\n",
       "Europe           14828\n",
       "Africa           13637\n",
       "Asia             13528\n",
       "North America     9116\n",
       "South America     3404\n",
       "Oceania           2235\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df ['continent'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "50eeb830-0d2a-4389-a8a8-cb4ee8ba9014",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "55154651.0"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df ['total_cases'].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c5e5242f-c094-4309-b21c-186d8b328b10",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "167797.3688753302"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df ['total_cases'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "98c1a541-d6f6-43eb-8744-e09b0f63284e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df ['total_cases'].min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "46c06df8-a4a8-43bb-8fa8-db2cc2d379cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count      44368.00\n",
       "mean        6858.64\n",
       "std        55780.81\n",
       "min            1.00\n",
       "25%           13.00\n",
       "50%           84.00\n",
       "75%          727.00\n",
       "max      1328537.00\n",
       "Name: total_deaths, dtype: float64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df ['total_deaths'].describe().round(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b09e34d3-eac3-4fe7-934c-c3d24f7f7726",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>continent</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Africa</th>\n",
       "      <td>0.797</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           human_development_index\n",
       "continent                         \n",
       "Africa                       0.797"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(\"continent\").agg({\"human_development_index\":\"max\"}).head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "32a8d3d2-bec9-4665-91e2-4438c5b40787",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>continent</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Africa</th>\n",
       "      <td>0.797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Asia</th>\n",
       "      <td>0.933</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Europe</th>\n",
       "      <td>0.953</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>North America</th>\n",
       "      <td>0.926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Oceania</th>\n",
       "      <td>0.939</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               human_development_index\n",
       "continent                             \n",
       "Africa                           0.797\n",
       "Asia                             0.933\n",
       "Europe                           0.953\n",
       "North America                    0.926\n",
       "Oceania                          0.939"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(\"continent\").agg({\"human_development_index\":\"max\"}).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "e14feed7-b0cc-4435-b7c6-3887b2670b22",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>continent</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Africa</th>\n",
       "      <td>0.354</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           human_development_index\n",
       "continent                         \n",
       "Africa                       0.354"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(\"continent\").agg({\"human_development_index\":\"min\"}).head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "2436004c-f5e1-4dc5-a8f8-e07ef8fe95c1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>continent</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Africa</th>\n",
       "      <td>0.354</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Asia</th>\n",
       "      <td>0.452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Europe</th>\n",
       "      <td>0.700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>North America</th>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Oceania</th>\n",
       "      <td>0.544</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               human_development_index\n",
       "continent                             \n",
       "Africa                           0.354\n",
       "Asia                             0.452\n",
       "Europe                           0.700\n",
       "North America                    0.498\n",
       "Oceania                          0.544"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(\"continent\").agg({\"human_development_index\":\"min\"}).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "34457734-cb25-44b4-8091-e155366ad0f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gdp_per_capita</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>continent</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Africa</th>\n",
       "      <td>26382.287</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           gdp_per_capita\n",
       "continent                \n",
       "Africa          26382.287"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(\"continent\").agg({\"gdp_per_capita\":\"max\"}).head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "87a5a158-e25c-4531-bbc9-53d821f6cbc7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gdp_per_capita</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>continent</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Africa</th>\n",
       "      <td>26382.287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Asia</th>\n",
       "      <td>116935.600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Europe</th>\n",
       "      <td>94277.965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>North America</th>\n",
       "      <td>54225.446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Oceania</th>\n",
       "      <td>44648.710</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               gdp_per_capita\n",
       "continent                    \n",
       "Africa              26382.287\n",
       "Asia               116935.600\n",
       "Europe              94277.965\n",
       "North America       54225.446\n",
       "Oceania             44648.710"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(\"continent\").agg({\"gdp_per_capita\":\"max\"}).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "f715e1c6-fad4-4fd2-871a-1cdcd0793dc8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gdp_per_capita</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>continent</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Africa</th>\n",
       "      <td>661.24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           gdp_per_capita\n",
       "continent                \n",
       "Africa             661.24"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(\"continent\").agg({\"gdp_per_capita\":\"min\"}).head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "d0e7c6e0-00a9-4fcc-9147-f3be91fef85f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gdp_per_capita</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>continent</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Africa</th>\n",
       "      <td>661.240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Asia</th>\n",
       "      <td>1479.147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Europe</th>\n",
       "      <td>5189.972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>North America</th>\n",
       "      <td>1653.173</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Oceania</th>\n",
       "      <td>2205.923</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               gdp_per_capita\n",
       "continent                    \n",
       "Africa                661.240\n",
       "Asia                 1479.147\n",
       "Europe               5189.972\n",
       "North America        1653.173\n",
       "Oceania              2205.923"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(\"continent\").agg({\"gdp_per_capita\":\"min\"}).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4a2896a3-56be-4c68-898d-9216c606bbc8",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=df[['continent','location','date','total_cases','total_deaths','gdp_per_capita','human_development_index']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "0c1491e3-4e6d-4186-aa60-6f9fd446dfd7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>31/12/19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>01/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>02/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>03/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>04/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57389</th>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>13/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57390</th>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>14/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57391</th>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>15/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57392</th>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>16/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57393</th>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>17/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>57394 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      continent       location      date  total_cases  total_deaths  \\\n",
       "0          Asia    Afghanistan  31/12/19          NaN           NaN   \n",
       "1          Asia    Afghanistan  01/01/20          NaN           NaN   \n",
       "2          Asia    Afghanistan  02/01/20          NaN           NaN   \n",
       "3          Asia    Afghanistan  03/01/20          NaN           NaN   \n",
       "4          Asia    Afghanistan  04/01/20          NaN           NaN   \n",
       "...         ...            ...       ...          ...           ...   \n",
       "57389       NaN  International  13/11/20        696.0           7.0   \n",
       "57390       NaN  International  14/11/20        696.0           7.0   \n",
       "57391       NaN  International  15/11/20        696.0           7.0   \n",
       "57392       NaN  International  16/11/20        696.0           7.0   \n",
       "57393       NaN  International  17/11/20        696.0           7.0   \n",
       "\n",
       "       gdp_per_capita  human_development_index  \n",
       "0            1803.987                    0.498  \n",
       "1            1803.987                    0.498  \n",
       "2            1803.987                    0.498  \n",
       "3            1803.987                    0.498  \n",
       "4            1803.987                    0.498  \n",
       "...               ...                      ...  \n",
       "57389             NaN                      NaN  \n",
       "57390             NaN                      NaN  \n",
       "57391             NaN                      NaN  \n",
       "57392             NaN                      NaN  \n",
       "57393             NaN                      NaN  \n",
       "\n",
       "[57394 rows x 7 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "9ff8b881-16ab-4519-8d19-f43a64a689fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "1deff594-10b0-42a6-9e20-e67e61c6dacf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>31/12/19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>01/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>02/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>03/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>04/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57389</th>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>13/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57390</th>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>14/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57391</th>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>15/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57392</th>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>16/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57393</th>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>17/11/20</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>57394 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      continent       location      date  total_cases  total_deaths  \\\n",
       "0          Asia    Afghanistan  31/12/19          NaN           NaN   \n",
       "1          Asia    Afghanistan  01/01/20          NaN           NaN   \n",
       "2          Asia    Afghanistan  02/01/20          NaN           NaN   \n",
       "3          Asia    Afghanistan  03/01/20          NaN           NaN   \n",
       "4          Asia    Afghanistan  04/01/20          NaN           NaN   \n",
       "...         ...            ...       ...          ...           ...   \n",
       "57389       NaN  International  13/11/20        696.0           7.0   \n",
       "57390       NaN  International  14/11/20        696.0           7.0   \n",
       "57391       NaN  International  15/11/20        696.0           7.0   \n",
       "57392       NaN  International  16/11/20        696.0           7.0   \n",
       "57393       NaN  International  17/11/20        696.0           7.0   \n",
       "\n",
       "       gdp_per_capita  human_development_index  \n",
       "0            1803.987                    0.498  \n",
       "1            1803.987                    0.498  \n",
       "2            1803.987                    0.498  \n",
       "3            1803.987                    0.498  \n",
       "4            1803.987                    0.498  \n",
       "...               ...                      ...  \n",
       "57389             NaN                      NaN  \n",
       "57390             NaN                      NaN  \n",
       "57391             NaN                      NaN  \n",
       "57392             NaN                      NaN  \n",
       "57393             NaN                      NaN  \n",
       "\n",
       "[57394 rows x 7 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop_duplicates()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "d8538858-85ff-4545-9c53-ed83f34b35e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "continent                    646\n",
       "location                       0\n",
       "date                           0\n",
       "total_cases                 3636\n",
       "total_deaths               13026\n",
       "gdp_per_capita              7027\n",
       "human_development_index     8147\n",
       "dtype: int64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "c956bab9-c842-46c9-89ea-6ca4ff8dcfaf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>31/12/19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>01/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>02/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>03/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>04/01/20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56743</th>\n",
       "      <td>Africa</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>13/11/20</td>\n",
       "      <td>8696.0</td>\n",
       "      <td>255.0</td>\n",
       "      <td>1899.775</td>\n",
       "      <td>0.535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56744</th>\n",
       "      <td>Africa</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>14/11/20</td>\n",
       "      <td>8765.0</td>\n",
       "      <td>257.0</td>\n",
       "      <td>1899.775</td>\n",
       "      <td>0.535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56745</th>\n",
       "      <td>Africa</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>15/11/20</td>\n",
       "      <td>8786.0</td>\n",
       "      <td>257.0</td>\n",
       "      <td>1899.775</td>\n",
       "      <td>0.535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56746</th>\n",
       "      <td>Africa</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>16/11/20</td>\n",
       "      <td>8786.0</td>\n",
       "      <td>257.0</td>\n",
       "      <td>1899.775</td>\n",
       "      <td>0.535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56747</th>\n",
       "      <td>Africa</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>17/11/20</td>\n",
       "      <td>8897.0</td>\n",
       "      <td>257.0</td>\n",
       "      <td>1899.775</td>\n",
       "      <td>0.535</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>56748 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      continent     location      date  total_cases  total_deaths  \\\n",
       "0          Asia  Afghanistan  31/12/19          NaN           NaN   \n",
       "1          Asia  Afghanistan  01/01/20          NaN           NaN   \n",
       "2          Asia  Afghanistan  02/01/20          NaN           NaN   \n",
       "3          Asia  Afghanistan  03/01/20          NaN           NaN   \n",
       "4          Asia  Afghanistan  04/01/20          NaN           NaN   \n",
       "...         ...          ...       ...          ...           ...   \n",
       "56743    Africa     Zimbabwe  13/11/20       8696.0         255.0   \n",
       "56744    Africa     Zimbabwe  14/11/20       8765.0         257.0   \n",
       "56745    Africa     Zimbabwe  15/11/20       8786.0         257.0   \n",
       "56746    Africa     Zimbabwe  16/11/20       8786.0         257.0   \n",
       "56747    Africa     Zimbabwe  17/11/20       8897.0         257.0   \n",
       "\n",
       "       gdp_per_capita  human_development_index  \n",
       "0            1803.987                    0.498  \n",
       "1            1803.987                    0.498  \n",
       "2            1803.987                    0.498  \n",
       "3            1803.987                    0.498  \n",
       "4            1803.987                    0.498  \n",
       "...               ...                      ...  \n",
       "56743        1899.775                    0.535  \n",
       "56744        1899.775                    0.535  \n",
       "56745        1899.775                    0.535  \n",
       "56746        1899.775                    0.535  \n",
       "56747        1899.775                    0.535  \n",
       "\n",
       "[56748 rows x 7 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dropna(subset=[\"continent\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "72f278ec-b845-442c-988f-bdd7f1f27f6a",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "8f0176c3-e833-4272-a47c-97dbc4b2e9ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "continent                  0\n",
       "location                   0\n",
       "date                       0\n",
       "total_cases                0\n",
       "total_deaths               0\n",
       "gdp_per_capita             0\n",
       "human_development_index    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "7ebf2f85-f887-4912-b45c-6f23aafc67d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\amolj\\AppData\\Local\\Temp\\ipykernel_2200\\1213281828.py:1: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n",
      "  df['date']=pd.to_datetime(df['date'])\n"
     ]
    }
   ],
   "source": [
    "df['date']=pd.to_datetime(df['date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "f706ba72-ad16-430c-822e-0ddd2aaab99b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "continent                          object\n",
       "location                           object\n",
       "date                       datetime64[ns]\n",
       "total_cases                       float64\n",
       "total_deaths                      float64\n",
       "gdp_per_capita                    float64\n",
       "human_development_index           float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "7eb01b6c-527c-4b74-9dd5-9d8294392c8b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['month']=pd.DatetimeIndex(df['date']).month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "1c930f6d-326f-4bb0-bd3d-53db60f9cef3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>human_development_index</th>\n",
       "      <th>month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2019-12-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2020-02-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2020-03-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.498</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57389</th>\n",
       "      <td>0</td>\n",
       "      <td>International</td>\n",
       "      <td>2020-11-13</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57390</th>\n",
       "      <td>0</td>\n",
       "      <td>International</td>\n",
       "      <td>2020-11-14</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57391</th>\n",
       "      <td>0</td>\n",
       "      <td>International</td>\n",
       "      <td>2020-11-15</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57392</th>\n",
       "      <td>0</td>\n",
       "      <td>International</td>\n",
       "      <td>2020-11-16</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57393</th>\n",
       "      <td>0</td>\n",
       "      <td>International</td>\n",
       "      <td>2020-11-17</td>\n",
       "      <td>696.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>57394 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      continent       location       date  total_cases  total_deaths  \\\n",
       "0          Asia    Afghanistan 2019-12-31          0.0           0.0   \n",
       "1          Asia    Afghanistan 2020-01-01          0.0           0.0   \n",
       "2          Asia    Afghanistan 2020-02-01          0.0           0.0   \n",
       "3          Asia    Afghanistan 2020-03-01          0.0           0.0   \n",
       "4          Asia    Afghanistan 2020-04-01          0.0           0.0   \n",
       "...         ...            ...        ...          ...           ...   \n",
       "57389         0  International 2020-11-13        696.0           7.0   \n",
       "57390         0  International 2020-11-14        696.0           7.0   \n",
       "57391         0  International 2020-11-15        696.0           7.0   \n",
       "57392         0  International 2020-11-16        696.0           7.0   \n",
       "57393         0  International 2020-11-17        696.0           7.0   \n",
       "\n",
       "       gdp_per_capita  human_development_index  month  \n",
       "0            1803.987                    0.498     12  \n",
       "1            1803.987                    0.498      1  \n",
       "2            1803.987                    0.498      2  \n",
       "3            1803.987                    0.498      3  \n",
       "4            1803.987                    0.498      4  \n",
       "...               ...                      ...    ...  \n",
       "57389           0.000                    0.000     11  \n",
       "57390           0.000                    0.000     11  \n",
       "57391           0.000                    0.000     11  \n",
       "57392           0.000                    0.000     11  \n",
       "57393           0.000                    0.000     11  \n",
       "\n",
       "[57394 rows x 8 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "87472529-4fdb-44df-a9dd-e0d28a71c618",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>human_development_index</th>\n",
       "      <th>month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>World</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>55154651.0</td>\n",
       "      <td>1328537.0</td>\n",
       "      <td>15469.207</td>\n",
       "      <td>0.000</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Africa</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>752269.0</td>\n",
       "      <td>20314.0</td>\n",
       "      <td>26382.287</td>\n",
       "      <td>0.797</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>8874290.0</td>\n",
       "      <td>130519.0</td>\n",
       "      <td>116935.600</td>\n",
       "      <td>0.933</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Europe</td>\n",
       "      <td>Vatican</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>1991233.0</td>\n",
       "      <td>52147.0</td>\n",
       "      <td>94277.965</td>\n",
       "      <td>0.953</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>North America</td>\n",
       "      <td>United States Virgin Islands</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>11205486.0</td>\n",
       "      <td>247220.0</td>\n",
       "      <td>54225.446</td>\n",
       "      <td>0.926</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Oceania</td>\n",
       "      <td>Wallis and Futuna</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>27750.0</td>\n",
       "      <td>907.0</td>\n",
       "      <td>44648.710</td>\n",
       "      <td>0.939</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>South America</td>\n",
       "      <td>Venezuela</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>5876464.0</td>\n",
       "      <td>166014.0</td>\n",
       "      <td>22767.037</td>\n",
       "      <td>0.843</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       continent                      location       date  total_cases  \\\n",
       "0              0                         World 2020-12-11   55154651.0   \n",
       "1         Africa                      Zimbabwe 2020-12-11     752269.0   \n",
       "2           Asia                         Yemen 2020-12-11    8874290.0   \n",
       "3         Europe                       Vatican 2020-12-11    1991233.0   \n",
       "4  North America  United States Virgin Islands 2020-12-11   11205486.0   \n",
       "5        Oceania             Wallis and Futuna 2020-12-11      27750.0   \n",
       "6  South America                     Venezuela 2020-12-11    5876464.0   \n",
       "\n",
       "   total_deaths  gdp_per_capita  human_development_index  month  \n",
       "0     1328537.0       15469.207                    0.000     12  \n",
       "1       20314.0       26382.287                    0.797     12  \n",
       "2      130519.0      116935.600                    0.933     12  \n",
       "3       52147.0       94277.965                    0.953     12  \n",
       "4      247220.0       54225.446                    0.926     12  \n",
       "5         907.0       44648.710                    0.939     12  \n",
       "6      166014.0       22767.037                    0.843     12  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('continent').max().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "e2480419-c600-422a-bfd4-18d46addcb2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>human_development_index</th>\n",
       "      <th>month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>World</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>55154651.0</td>\n",
       "      <td>1328537.0</td>\n",
       "      <td>15469.207</td>\n",
       "      <td>0.000</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Africa</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>752269.0</td>\n",
       "      <td>20314.0</td>\n",
       "      <td>26382.287</td>\n",
       "      <td>0.797</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>8874290.0</td>\n",
       "      <td>130519.0</td>\n",
       "      <td>116935.600</td>\n",
       "      <td>0.933</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Europe</td>\n",
       "      <td>Vatican</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>1991233.0</td>\n",
       "      <td>52147.0</td>\n",
       "      <td>94277.965</td>\n",
       "      <td>0.953</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>North America</td>\n",
       "      <td>United States Virgin Islands</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>11205486.0</td>\n",
       "      <td>247220.0</td>\n",
       "      <td>54225.446</td>\n",
       "      <td>0.926</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Oceania</td>\n",
       "      <td>Wallis and Futuna</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>27750.0</td>\n",
       "      <td>907.0</td>\n",
       "      <td>44648.710</td>\n",
       "      <td>0.939</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>South America</td>\n",
       "      <td>Venezuela</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>5876464.0</td>\n",
       "      <td>166014.0</td>\n",
       "      <td>22767.037</td>\n",
       "      <td>0.843</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       continent                      location       date  total_cases  \\\n",
       "0              0                         World 2020-12-11   55154651.0   \n",
       "1         Africa                      Zimbabwe 2020-12-11     752269.0   \n",
       "2           Asia                         Yemen 2020-12-11    8874290.0   \n",
       "3         Europe                       Vatican 2020-12-11    1991233.0   \n",
       "4  North America  United States Virgin Islands 2020-12-11   11205486.0   \n",
       "5        Oceania             Wallis and Futuna 2020-12-11      27750.0   \n",
       "6  South America                     Venezuela 2020-12-11    5876464.0   \n",
       "\n",
       "   total_deaths  gdp_per_capita  human_development_index  month  \n",
       "0     1328537.0       15469.207                    0.000     12  \n",
       "1       20314.0       26382.287                    0.797     12  \n",
       "2      130519.0      116935.600                    0.933     12  \n",
       "3       52147.0       94277.965                    0.953     12  \n",
       "4      247220.0       54225.446                    0.926     12  \n",
       "5         907.0       44648.710                    0.939     12  \n",
       "6      166014.0       22767.037                    0.843     12  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_groupby = df.groupby('continent').max().reset_index()\n",
    "df_groupby"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "0f590ea0-9aae-4272-a4cb-6561e6561965",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_groupby[\"total_deaths to total_cases\"]=df_groupby[\"total_deaths\"]/df_groupby[\"total_cases\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "6de4a3b2-dce6-41fa-b555-1f61206f3fb2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    2.408749\n",
       "1    2.700364\n",
       "2    1.470754\n",
       "3    2.618830\n",
       "4    2.206241\n",
       "5    3.268468\n",
       "6    2.825066\n",
       "Name: total_deaths to total_cases, dtype: float64"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_groupby[\"total_deaths to total_cases\"]*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "25d6ce34-b345-4a76-9db5-8bb49868c330",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>human_development_index</th>\n",
       "      <th>month</th>\n",
       "      <th>total_deaths to total_cases</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>World</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>55154651.0</td>\n",
       "      <td>1328537.0</td>\n",
       "      <td>15469.207</td>\n",
       "      <td>0.000</td>\n",
       "      <td>12</td>\n",
       "      <td>0.024087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Africa</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>752269.0</td>\n",
       "      <td>20314.0</td>\n",
       "      <td>26382.287</td>\n",
       "      <td>0.797</td>\n",
       "      <td>12</td>\n",
       "      <td>0.027004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Asia</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>8874290.0</td>\n",
       "      <td>130519.0</td>\n",
       "      <td>116935.600</td>\n",
       "      <td>0.933</td>\n",
       "      <td>12</td>\n",
       "      <td>0.014708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Europe</td>\n",
       "      <td>Vatican</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>1991233.0</td>\n",
       "      <td>52147.0</td>\n",
       "      <td>94277.965</td>\n",
       "      <td>0.953</td>\n",
       "      <td>12</td>\n",
       "      <td>0.026188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>North America</td>\n",
       "      <td>United States Virgin Islands</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>11205486.0</td>\n",
       "      <td>247220.0</td>\n",
       "      <td>54225.446</td>\n",
       "      <td>0.926</td>\n",
       "      <td>12</td>\n",
       "      <td>0.022062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Oceania</td>\n",
       "      <td>Wallis and Futuna</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>27750.0</td>\n",
       "      <td>907.0</td>\n",
       "      <td>44648.710</td>\n",
       "      <td>0.939</td>\n",
       "      <td>12</td>\n",
       "      <td>0.032685</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>South America</td>\n",
       "      <td>Venezuela</td>\n",
       "      <td>2020-12-11</td>\n",
       "      <td>5876464.0</td>\n",
       "      <td>166014.0</td>\n",
       "      <td>22767.037</td>\n",
       "      <td>0.843</td>\n",
       "      <td>12</td>\n",
       "      <td>0.028251</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       continent                      location       date  total_cases  \\\n",
       "0              0                         World 2020-12-11   55154651.0   \n",
       "1         Africa                      Zimbabwe 2020-12-11     752269.0   \n",
       "2           Asia                         Yemen 2020-12-11    8874290.0   \n",
       "3         Europe                       Vatican 2020-12-11    1991233.0   \n",
       "4  North America  United States Virgin Islands 2020-12-11   11205486.0   \n",
       "5        Oceania             Wallis and Futuna 2020-12-11      27750.0   \n",
       "6  South America                     Venezuela 2020-12-11    5876464.0   \n",
       "\n",
       "   total_deaths  gdp_per_capita  human_development_index  month  \\\n",
       "0     1328537.0       15469.207                    0.000     12   \n",
       "1       20314.0       26382.287                    0.797     12   \n",
       "2      130519.0      116935.600                    0.933     12   \n",
       "3       52147.0       94277.965                    0.953     12   \n",
       "4      247220.0       54225.446                    0.926     12   \n",
       "5         907.0       44648.710                    0.939     12   \n",
       "6      166014.0       22767.037                    0.843     12   \n",
       "\n",
       "   total_deaths to total_cases  \n",
       "0                     0.024087  \n",
       "1                     0.027004  \n",
       "2                     0.014708  \n",
       "3                     0.026188  \n",
       "4                     0.022062  \n",
       "5                     0.032685  \n",
       "6                     0.028251  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_groupby"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "d13677c5-6b24-4664-a0ae-70dca2ed917b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1de6fe93230>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df[\"gdp_per_capita\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "d5481a0f-3fb9-4592-bc86-27792168283e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.JointGrid at 0x1de6feb49e0>"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x600 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.jointplot(data=df_groupby,x=\"total_cases\",y=\"gdp_per_capita\",kind=\"scatter\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "58918376-f799-453c-91dd-d67353cd1085",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.PairGrid at 0x1de6fe190d0>"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x1500 with 42 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pairplot(data=df_groupby)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "01277001-ff59-4166-864d-88b022100a0a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1de709e2c30>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 511.111x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(data=df_groupby, x=\"continent\", y=\"total_cases\", kind=\"bar\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "e4cf240e-2fde-43dc-8482-d95f0c418cdd",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv(\"covid_data.csv\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
